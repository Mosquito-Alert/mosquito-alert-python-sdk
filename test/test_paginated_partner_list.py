# coding: utf-8

"""
    Mosquito Alert API

    Introducing API v1 for Mosquito Alert platform, a project desgined to facilitate citizen science initiatives and enable collaboration among scientists, public health officials, and environmental managers in the investigation and control of disease-carrying mosquitoes.

    The version of the OpenAPI document: v1
    Contact: it@mosquitoalert.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from mosquito_alert.models.paginated_partner_list import PaginatedPartnerList

class TestPaginatedPartnerList(unittest.TestCase):
    """PaginatedPartnerList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaginatedPartnerList:
        """Test PaginatedPartnerList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PaginatedPartnerList`
        """
        model = PaginatedPartnerList()
        if include_optional:
            return PaginatedPartnerList(
                count = 123,
                next = 'http://api.example.org/accounts/?page=4',
                previous = 'http://api.example.org/accounts/?page=2',
                results = [
                    mosquito_alert.models.partner.Partner(
                        id = 56, 
                        point = mosquito_alert.models.location_point.Location_point(
                            latitude = 1.337, 
                            longitude = 1.337, ), 
                        description = '', 
                        url = '', )
                    ]
            )
        else:
            return PaginatedPartnerList(
        )
        """

    def testPaginatedPartnerList(self):
        """Test PaginatedPartnerList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
