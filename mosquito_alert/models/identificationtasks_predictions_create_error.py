# coding: utf-8

"""
    Mosquito Alert API

    Introducing API v1 for Mosquito Alert platform, a project desgined to facilitate citizen science initiatives and enable collaboration among scientists, public health officials, and environmental managers in the investigation and control of disease-carrying mosquitoes.

    The version of the OpenAPI document: v1
    Contact: it@mosquitoalert.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
import pprint
from pydantic import BaseModel, ConfigDict, Field, StrictStr, ValidationError, field_validator
from typing import Any, List, Optional
from mosquito_alert.models.identificationtasks_predictions_create_bbox_non_field_errors_error_component import IdentificationtasksPredictionsCreateBboxNonFieldErrorsErrorComponent
from mosquito_alert.models.identificationtasks_predictions_create_bbox_x_max_error_component import IdentificationtasksPredictionsCreateBboxXMaxErrorComponent
from mosquito_alert.models.identificationtasks_predictions_create_bbox_x_min_error_component import IdentificationtasksPredictionsCreateBboxXMinErrorComponent
from mosquito_alert.models.identificationtasks_predictions_create_bbox_y_max_error_component import IdentificationtasksPredictionsCreateBboxYMaxErrorComponent
from mosquito_alert.models.identificationtasks_predictions_create_bbox_y_min_error_component import IdentificationtasksPredictionsCreateBboxYMinErrorComponent
from mosquito_alert.models.identificationtasks_predictions_create_classifier_version_error_component import IdentificationtasksPredictionsCreateClassifierVersionErrorComponent
from mosquito_alert.models.identificationtasks_predictions_create_insect_confidence_error_component import IdentificationtasksPredictionsCreateInsectConfidenceErrorComponent
from mosquito_alert.models.identificationtasks_predictions_create_is_final_prediction_error_component import IdentificationtasksPredictionsCreateIsFinalPredictionErrorComponent
from mosquito_alert.models.identificationtasks_predictions_create_non_field_errors_error_component import IdentificationtasksPredictionsCreateNonFieldErrorsErrorComponent
from mosquito_alert.models.identificationtasks_predictions_create_photo_uuid_error_component import IdentificationtasksPredictionsCreatePhotoUuidErrorComponent
from mosquito_alert.models.identificationtasks_predictions_create_predicted_class_error_component import IdentificationtasksPredictionsCreatePredictedClassErrorComponent
from mosquito_alert.models.identificationtasks_predictions_create_scores_ae_aegypti_error_component import IdentificationtasksPredictionsCreateScoresAeAegyptiErrorComponent
from mosquito_alert.models.identificationtasks_predictions_create_scores_ae_albopictus_error_component import IdentificationtasksPredictionsCreateScoresAeAlbopictusErrorComponent
from mosquito_alert.models.identificationtasks_predictions_create_scores_ae_japonicus_error_component import IdentificationtasksPredictionsCreateScoresAeJaponicusErrorComponent
from mosquito_alert.models.identificationtasks_predictions_create_scores_ae_koreicus_error_component import IdentificationtasksPredictionsCreateScoresAeKoreicusErrorComponent
from mosquito_alert.models.identificationtasks_predictions_create_scores_anopheles_error_component import IdentificationtasksPredictionsCreateScoresAnophelesErrorComponent
from mosquito_alert.models.identificationtasks_predictions_create_scores_culex_error_component import IdentificationtasksPredictionsCreateScoresCulexErrorComponent
from mosquito_alert.models.identificationtasks_predictions_create_scores_culiseta_error_component import IdentificationtasksPredictionsCreateScoresCulisetaErrorComponent
from mosquito_alert.models.identificationtasks_predictions_create_scores_non_field_errors_error_component import IdentificationtasksPredictionsCreateScoresNonFieldErrorsErrorComponent
from mosquito_alert.models.identificationtasks_predictions_create_scores_not_sure_error_component import IdentificationtasksPredictionsCreateScoresNotSureErrorComponent
from mosquito_alert.models.identificationtasks_predictions_create_scores_other_species_error_component import IdentificationtasksPredictionsCreateScoresOtherSpeciesErrorComponent
from mosquito_alert.models.identificationtasks_predictions_create_threshold_deviation_error_component import IdentificationtasksPredictionsCreateThresholdDeviationErrorComponent
from pydantic import StrictStr, Field
from typing import Union, List, Set, Optional, Dict
from typing_extensions import Literal, Self

IDENTIFICATIONTASKSPREDICTIONSCREATEERROR_ONE_OF_SCHEMAS = ["IdentificationtasksPredictionsCreateBboxNonFieldErrorsErrorComponent", "IdentificationtasksPredictionsCreateBboxXMaxErrorComponent", "IdentificationtasksPredictionsCreateBboxXMinErrorComponent", "IdentificationtasksPredictionsCreateBboxYMaxErrorComponent", "IdentificationtasksPredictionsCreateBboxYMinErrorComponent", "IdentificationtasksPredictionsCreateClassifierVersionErrorComponent", "IdentificationtasksPredictionsCreateInsectConfidenceErrorComponent", "IdentificationtasksPredictionsCreateIsFinalPredictionErrorComponent", "IdentificationtasksPredictionsCreateNonFieldErrorsErrorComponent", "IdentificationtasksPredictionsCreatePhotoUuidErrorComponent", "IdentificationtasksPredictionsCreatePredictedClassErrorComponent", "IdentificationtasksPredictionsCreateScoresAeAegyptiErrorComponent", "IdentificationtasksPredictionsCreateScoresAeAlbopictusErrorComponent", "IdentificationtasksPredictionsCreateScoresAeJaponicusErrorComponent", "IdentificationtasksPredictionsCreateScoresAeKoreicusErrorComponent", "IdentificationtasksPredictionsCreateScoresAnophelesErrorComponent", "IdentificationtasksPredictionsCreateScoresCulexErrorComponent", "IdentificationtasksPredictionsCreateScoresCulisetaErrorComponent", "IdentificationtasksPredictionsCreateScoresNonFieldErrorsErrorComponent", "IdentificationtasksPredictionsCreateScoresNotSureErrorComponent", "IdentificationtasksPredictionsCreateScoresOtherSpeciesErrorComponent", "IdentificationtasksPredictionsCreateThresholdDeviationErrorComponent"]

class IdentificationtasksPredictionsCreateError(BaseModel):
    """
    IdentificationtasksPredictionsCreateError
    """
    # data type: IdentificationtasksPredictionsCreateNonFieldErrorsErrorComponent
    oneof_schema_1_validator: Optional[IdentificationtasksPredictionsCreateNonFieldErrorsErrorComponent] = None
    # data type: IdentificationtasksPredictionsCreatePhotoUuidErrorComponent
    oneof_schema_2_validator: Optional[IdentificationtasksPredictionsCreatePhotoUuidErrorComponent] = None
    # data type: IdentificationtasksPredictionsCreateBboxNonFieldErrorsErrorComponent
    oneof_schema_3_validator: Optional[IdentificationtasksPredictionsCreateBboxNonFieldErrorsErrorComponent] = None
    # data type: IdentificationtasksPredictionsCreateBboxXMinErrorComponent
    oneof_schema_4_validator: Optional[IdentificationtasksPredictionsCreateBboxXMinErrorComponent] = None
    # data type: IdentificationtasksPredictionsCreateBboxYMinErrorComponent
    oneof_schema_5_validator: Optional[IdentificationtasksPredictionsCreateBboxYMinErrorComponent] = None
    # data type: IdentificationtasksPredictionsCreateBboxXMaxErrorComponent
    oneof_schema_6_validator: Optional[IdentificationtasksPredictionsCreateBboxXMaxErrorComponent] = None
    # data type: IdentificationtasksPredictionsCreateBboxYMaxErrorComponent
    oneof_schema_7_validator: Optional[IdentificationtasksPredictionsCreateBboxYMaxErrorComponent] = None
    # data type: IdentificationtasksPredictionsCreateInsectConfidenceErrorComponent
    oneof_schema_8_validator: Optional[IdentificationtasksPredictionsCreateInsectConfidenceErrorComponent] = None
    # data type: IdentificationtasksPredictionsCreatePredictedClassErrorComponent
    oneof_schema_9_validator: Optional[IdentificationtasksPredictionsCreatePredictedClassErrorComponent] = None
    # data type: IdentificationtasksPredictionsCreateThresholdDeviationErrorComponent
    oneof_schema_10_validator: Optional[IdentificationtasksPredictionsCreateThresholdDeviationErrorComponent] = None
    # data type: IdentificationtasksPredictionsCreateIsFinalPredictionErrorComponent
    oneof_schema_11_validator: Optional[IdentificationtasksPredictionsCreateIsFinalPredictionErrorComponent] = None
    # data type: IdentificationtasksPredictionsCreateScoresNonFieldErrorsErrorComponent
    oneof_schema_12_validator: Optional[IdentificationtasksPredictionsCreateScoresNonFieldErrorsErrorComponent] = None
    # data type: IdentificationtasksPredictionsCreateScoresAeAlbopictusErrorComponent
    oneof_schema_13_validator: Optional[IdentificationtasksPredictionsCreateScoresAeAlbopictusErrorComponent] = None
    # data type: IdentificationtasksPredictionsCreateScoresAeAegyptiErrorComponent
    oneof_schema_14_validator: Optional[IdentificationtasksPredictionsCreateScoresAeAegyptiErrorComponent] = None
    # data type: IdentificationtasksPredictionsCreateScoresAeJaponicusErrorComponent
    oneof_schema_15_validator: Optional[IdentificationtasksPredictionsCreateScoresAeJaponicusErrorComponent] = None
    # data type: IdentificationtasksPredictionsCreateScoresAeKoreicusErrorComponent
    oneof_schema_16_validator: Optional[IdentificationtasksPredictionsCreateScoresAeKoreicusErrorComponent] = None
    # data type: IdentificationtasksPredictionsCreateScoresCulexErrorComponent
    oneof_schema_17_validator: Optional[IdentificationtasksPredictionsCreateScoresCulexErrorComponent] = None
    # data type: IdentificationtasksPredictionsCreateScoresAnophelesErrorComponent
    oneof_schema_18_validator: Optional[IdentificationtasksPredictionsCreateScoresAnophelesErrorComponent] = None
    # data type: IdentificationtasksPredictionsCreateScoresCulisetaErrorComponent
    oneof_schema_19_validator: Optional[IdentificationtasksPredictionsCreateScoresCulisetaErrorComponent] = None
    # data type: IdentificationtasksPredictionsCreateScoresOtherSpeciesErrorComponent
    oneof_schema_20_validator: Optional[IdentificationtasksPredictionsCreateScoresOtherSpeciesErrorComponent] = None
    # data type: IdentificationtasksPredictionsCreateScoresNotSureErrorComponent
    oneof_schema_21_validator: Optional[IdentificationtasksPredictionsCreateScoresNotSureErrorComponent] = None
    # data type: IdentificationtasksPredictionsCreateClassifierVersionErrorComponent
    oneof_schema_22_validator: Optional[IdentificationtasksPredictionsCreateClassifierVersionErrorComponent] = None
    actual_instance: Optional[Union[IdentificationtasksPredictionsCreateBboxNonFieldErrorsErrorComponent, IdentificationtasksPredictionsCreateBboxXMaxErrorComponent, IdentificationtasksPredictionsCreateBboxXMinErrorComponent, IdentificationtasksPredictionsCreateBboxYMaxErrorComponent, IdentificationtasksPredictionsCreateBboxYMinErrorComponent, IdentificationtasksPredictionsCreateClassifierVersionErrorComponent, IdentificationtasksPredictionsCreateInsectConfidenceErrorComponent, IdentificationtasksPredictionsCreateIsFinalPredictionErrorComponent, IdentificationtasksPredictionsCreateNonFieldErrorsErrorComponent, IdentificationtasksPredictionsCreatePhotoUuidErrorComponent, IdentificationtasksPredictionsCreatePredictedClassErrorComponent, IdentificationtasksPredictionsCreateScoresAeAegyptiErrorComponent, IdentificationtasksPredictionsCreateScoresAeAlbopictusErrorComponent, IdentificationtasksPredictionsCreateScoresAeJaponicusErrorComponent, IdentificationtasksPredictionsCreateScoresAeKoreicusErrorComponent, IdentificationtasksPredictionsCreateScoresAnophelesErrorComponent, IdentificationtasksPredictionsCreateScoresCulexErrorComponent, IdentificationtasksPredictionsCreateScoresCulisetaErrorComponent, IdentificationtasksPredictionsCreateScoresNonFieldErrorsErrorComponent, IdentificationtasksPredictionsCreateScoresNotSureErrorComponent, IdentificationtasksPredictionsCreateScoresOtherSpeciesErrorComponent, IdentificationtasksPredictionsCreateThresholdDeviationErrorComponent]] = None
    one_of_schemas: Set[str] = { "IdentificationtasksPredictionsCreateBboxNonFieldErrorsErrorComponent", "IdentificationtasksPredictionsCreateBboxXMaxErrorComponent", "IdentificationtasksPredictionsCreateBboxXMinErrorComponent", "IdentificationtasksPredictionsCreateBboxYMaxErrorComponent", "IdentificationtasksPredictionsCreateBboxYMinErrorComponent", "IdentificationtasksPredictionsCreateClassifierVersionErrorComponent", "IdentificationtasksPredictionsCreateInsectConfidenceErrorComponent", "IdentificationtasksPredictionsCreateIsFinalPredictionErrorComponent", "IdentificationtasksPredictionsCreateNonFieldErrorsErrorComponent", "IdentificationtasksPredictionsCreatePhotoUuidErrorComponent", "IdentificationtasksPredictionsCreatePredictedClassErrorComponent", "IdentificationtasksPredictionsCreateScoresAeAegyptiErrorComponent", "IdentificationtasksPredictionsCreateScoresAeAlbopictusErrorComponent", "IdentificationtasksPredictionsCreateScoresAeJaponicusErrorComponent", "IdentificationtasksPredictionsCreateScoresAeKoreicusErrorComponent", "IdentificationtasksPredictionsCreateScoresAnophelesErrorComponent", "IdentificationtasksPredictionsCreateScoresCulexErrorComponent", "IdentificationtasksPredictionsCreateScoresCulisetaErrorComponent", "IdentificationtasksPredictionsCreateScoresNonFieldErrorsErrorComponent", "IdentificationtasksPredictionsCreateScoresNotSureErrorComponent", "IdentificationtasksPredictionsCreateScoresOtherSpeciesErrorComponent", "IdentificationtasksPredictionsCreateThresholdDeviationErrorComponent" }

    model_config = ConfigDict(
        validate_assignment=True,
        protected_namespaces=(),
    )


    discriminator_value_class_map: Dict[str, str] = {
    }

    def __init__(self, *args, **kwargs) -> None:
        if args:
            if len(args) > 1:
                raise ValueError("If a position argument is used, only 1 is allowed to set `actual_instance`")
            if kwargs:
                raise ValueError("If a position argument is used, keyword arguments cannot be used.")
            super().__init__(actual_instance=args[0])
        else:
            super().__init__(**kwargs)

    @field_validator('actual_instance')
    def actual_instance_must_validate_oneof(cls, v):
        instance = IdentificationtasksPredictionsCreateError.model_construct()
        error_messages = []
        match = 0
        # validate data type: IdentificationtasksPredictionsCreateNonFieldErrorsErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsCreateNonFieldErrorsErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsCreateNonFieldErrorsErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsCreatePhotoUuidErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsCreatePhotoUuidErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsCreatePhotoUuidErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsCreateBboxNonFieldErrorsErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsCreateBboxNonFieldErrorsErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsCreateBboxNonFieldErrorsErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsCreateBboxXMinErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsCreateBboxXMinErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsCreateBboxXMinErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsCreateBboxYMinErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsCreateBboxYMinErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsCreateBboxYMinErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsCreateBboxXMaxErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsCreateBboxXMaxErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsCreateBboxXMaxErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsCreateBboxYMaxErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsCreateBboxYMaxErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsCreateBboxYMaxErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsCreateInsectConfidenceErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsCreateInsectConfidenceErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsCreateInsectConfidenceErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsCreatePredictedClassErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsCreatePredictedClassErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsCreatePredictedClassErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsCreateThresholdDeviationErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsCreateThresholdDeviationErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsCreateThresholdDeviationErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsCreateIsFinalPredictionErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsCreateIsFinalPredictionErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsCreateIsFinalPredictionErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsCreateScoresNonFieldErrorsErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsCreateScoresNonFieldErrorsErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsCreateScoresNonFieldErrorsErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsCreateScoresAeAlbopictusErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsCreateScoresAeAlbopictusErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsCreateScoresAeAlbopictusErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsCreateScoresAeAegyptiErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsCreateScoresAeAegyptiErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsCreateScoresAeAegyptiErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsCreateScoresAeJaponicusErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsCreateScoresAeJaponicusErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsCreateScoresAeJaponicusErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsCreateScoresAeKoreicusErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsCreateScoresAeKoreicusErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsCreateScoresAeKoreicusErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsCreateScoresCulexErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsCreateScoresCulexErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsCreateScoresCulexErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsCreateScoresAnophelesErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsCreateScoresAnophelesErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsCreateScoresAnophelesErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsCreateScoresCulisetaErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsCreateScoresCulisetaErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsCreateScoresCulisetaErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsCreateScoresOtherSpeciesErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsCreateScoresOtherSpeciesErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsCreateScoresOtherSpeciesErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsCreateScoresNotSureErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsCreateScoresNotSureErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsCreateScoresNotSureErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsCreateClassifierVersionErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsCreateClassifierVersionErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsCreateClassifierVersionErrorComponent`")
        else:
            match += 1
        if match > 1:
            # more than 1 match
            raise ValueError("Multiple matches found when setting `actual_instance` in IdentificationtasksPredictionsCreateError with oneOf schemas: IdentificationtasksPredictionsCreateBboxNonFieldErrorsErrorComponent, IdentificationtasksPredictionsCreateBboxXMaxErrorComponent, IdentificationtasksPredictionsCreateBboxXMinErrorComponent, IdentificationtasksPredictionsCreateBboxYMaxErrorComponent, IdentificationtasksPredictionsCreateBboxYMinErrorComponent, IdentificationtasksPredictionsCreateClassifierVersionErrorComponent, IdentificationtasksPredictionsCreateInsectConfidenceErrorComponent, IdentificationtasksPredictionsCreateIsFinalPredictionErrorComponent, IdentificationtasksPredictionsCreateNonFieldErrorsErrorComponent, IdentificationtasksPredictionsCreatePhotoUuidErrorComponent, IdentificationtasksPredictionsCreatePredictedClassErrorComponent, IdentificationtasksPredictionsCreateScoresAeAegyptiErrorComponent, IdentificationtasksPredictionsCreateScoresAeAlbopictusErrorComponent, IdentificationtasksPredictionsCreateScoresAeJaponicusErrorComponent, IdentificationtasksPredictionsCreateScoresAeKoreicusErrorComponent, IdentificationtasksPredictionsCreateScoresAnophelesErrorComponent, IdentificationtasksPredictionsCreateScoresCulexErrorComponent, IdentificationtasksPredictionsCreateScoresCulisetaErrorComponent, IdentificationtasksPredictionsCreateScoresNonFieldErrorsErrorComponent, IdentificationtasksPredictionsCreateScoresNotSureErrorComponent, IdentificationtasksPredictionsCreateScoresOtherSpeciesErrorComponent, IdentificationtasksPredictionsCreateThresholdDeviationErrorComponent. Details: " + ", ".join(error_messages))
        elif match == 0:
            # no match
            raise ValueError("No match found when setting `actual_instance` in IdentificationtasksPredictionsCreateError with oneOf schemas: IdentificationtasksPredictionsCreateBboxNonFieldErrorsErrorComponent, IdentificationtasksPredictionsCreateBboxXMaxErrorComponent, IdentificationtasksPredictionsCreateBboxXMinErrorComponent, IdentificationtasksPredictionsCreateBboxYMaxErrorComponent, IdentificationtasksPredictionsCreateBboxYMinErrorComponent, IdentificationtasksPredictionsCreateClassifierVersionErrorComponent, IdentificationtasksPredictionsCreateInsectConfidenceErrorComponent, IdentificationtasksPredictionsCreateIsFinalPredictionErrorComponent, IdentificationtasksPredictionsCreateNonFieldErrorsErrorComponent, IdentificationtasksPredictionsCreatePhotoUuidErrorComponent, IdentificationtasksPredictionsCreatePredictedClassErrorComponent, IdentificationtasksPredictionsCreateScoresAeAegyptiErrorComponent, IdentificationtasksPredictionsCreateScoresAeAlbopictusErrorComponent, IdentificationtasksPredictionsCreateScoresAeJaponicusErrorComponent, IdentificationtasksPredictionsCreateScoresAeKoreicusErrorComponent, IdentificationtasksPredictionsCreateScoresAnophelesErrorComponent, IdentificationtasksPredictionsCreateScoresCulexErrorComponent, IdentificationtasksPredictionsCreateScoresCulisetaErrorComponent, IdentificationtasksPredictionsCreateScoresNonFieldErrorsErrorComponent, IdentificationtasksPredictionsCreateScoresNotSureErrorComponent, IdentificationtasksPredictionsCreateScoresOtherSpeciesErrorComponent, IdentificationtasksPredictionsCreateThresholdDeviationErrorComponent. Details: " + ", ".join(error_messages))
        else:
            return v

    @classmethod
    def from_dict(cls, obj: Union[str, Dict[str, Any]]) -> Self:
        return cls.from_json(json.dumps(obj))

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Returns the object represented by the json string"""
        instance = cls.model_construct()
        error_messages = []
        match = 0

        # deserialize data into IdentificationtasksPredictionsCreateNonFieldErrorsErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsCreateNonFieldErrorsErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsCreatePhotoUuidErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsCreatePhotoUuidErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsCreateBboxNonFieldErrorsErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsCreateBboxNonFieldErrorsErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsCreateBboxXMinErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsCreateBboxXMinErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsCreateBboxYMinErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsCreateBboxYMinErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsCreateBboxXMaxErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsCreateBboxXMaxErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsCreateBboxYMaxErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsCreateBboxYMaxErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsCreateInsectConfidenceErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsCreateInsectConfidenceErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsCreatePredictedClassErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsCreatePredictedClassErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsCreateThresholdDeviationErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsCreateThresholdDeviationErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsCreateIsFinalPredictionErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsCreateIsFinalPredictionErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsCreateScoresNonFieldErrorsErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsCreateScoresNonFieldErrorsErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsCreateScoresAeAlbopictusErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsCreateScoresAeAlbopictusErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsCreateScoresAeAegyptiErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsCreateScoresAeAegyptiErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsCreateScoresAeJaponicusErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsCreateScoresAeJaponicusErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsCreateScoresAeKoreicusErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsCreateScoresAeKoreicusErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsCreateScoresCulexErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsCreateScoresCulexErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsCreateScoresAnophelesErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsCreateScoresAnophelesErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsCreateScoresCulisetaErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsCreateScoresCulisetaErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsCreateScoresOtherSpeciesErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsCreateScoresOtherSpeciesErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsCreateScoresNotSureErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsCreateScoresNotSureErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsCreateClassifierVersionErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsCreateClassifierVersionErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))

        if match > 1:
            # more than 1 match
            raise ValueError("Multiple matches found when deserializing the JSON string into IdentificationtasksPredictionsCreateError with oneOf schemas: IdentificationtasksPredictionsCreateBboxNonFieldErrorsErrorComponent, IdentificationtasksPredictionsCreateBboxXMaxErrorComponent, IdentificationtasksPredictionsCreateBboxXMinErrorComponent, IdentificationtasksPredictionsCreateBboxYMaxErrorComponent, IdentificationtasksPredictionsCreateBboxYMinErrorComponent, IdentificationtasksPredictionsCreateClassifierVersionErrorComponent, IdentificationtasksPredictionsCreateInsectConfidenceErrorComponent, IdentificationtasksPredictionsCreateIsFinalPredictionErrorComponent, IdentificationtasksPredictionsCreateNonFieldErrorsErrorComponent, IdentificationtasksPredictionsCreatePhotoUuidErrorComponent, IdentificationtasksPredictionsCreatePredictedClassErrorComponent, IdentificationtasksPredictionsCreateScoresAeAegyptiErrorComponent, IdentificationtasksPredictionsCreateScoresAeAlbopictusErrorComponent, IdentificationtasksPredictionsCreateScoresAeJaponicusErrorComponent, IdentificationtasksPredictionsCreateScoresAeKoreicusErrorComponent, IdentificationtasksPredictionsCreateScoresAnophelesErrorComponent, IdentificationtasksPredictionsCreateScoresCulexErrorComponent, IdentificationtasksPredictionsCreateScoresCulisetaErrorComponent, IdentificationtasksPredictionsCreateScoresNonFieldErrorsErrorComponent, IdentificationtasksPredictionsCreateScoresNotSureErrorComponent, IdentificationtasksPredictionsCreateScoresOtherSpeciesErrorComponent, IdentificationtasksPredictionsCreateThresholdDeviationErrorComponent. Details: " + ", ".join(error_messages))
        elif match == 0:
            # no match
            raise ValueError("No match found when deserializing the JSON string into IdentificationtasksPredictionsCreateError with oneOf schemas: IdentificationtasksPredictionsCreateBboxNonFieldErrorsErrorComponent, IdentificationtasksPredictionsCreateBboxXMaxErrorComponent, IdentificationtasksPredictionsCreateBboxXMinErrorComponent, IdentificationtasksPredictionsCreateBboxYMaxErrorComponent, IdentificationtasksPredictionsCreateBboxYMinErrorComponent, IdentificationtasksPredictionsCreateClassifierVersionErrorComponent, IdentificationtasksPredictionsCreateInsectConfidenceErrorComponent, IdentificationtasksPredictionsCreateIsFinalPredictionErrorComponent, IdentificationtasksPredictionsCreateNonFieldErrorsErrorComponent, IdentificationtasksPredictionsCreatePhotoUuidErrorComponent, IdentificationtasksPredictionsCreatePredictedClassErrorComponent, IdentificationtasksPredictionsCreateScoresAeAegyptiErrorComponent, IdentificationtasksPredictionsCreateScoresAeAlbopictusErrorComponent, IdentificationtasksPredictionsCreateScoresAeJaponicusErrorComponent, IdentificationtasksPredictionsCreateScoresAeKoreicusErrorComponent, IdentificationtasksPredictionsCreateScoresAnophelesErrorComponent, IdentificationtasksPredictionsCreateScoresCulexErrorComponent, IdentificationtasksPredictionsCreateScoresCulisetaErrorComponent, IdentificationtasksPredictionsCreateScoresNonFieldErrorsErrorComponent, IdentificationtasksPredictionsCreateScoresNotSureErrorComponent, IdentificationtasksPredictionsCreateScoresOtherSpeciesErrorComponent, IdentificationtasksPredictionsCreateThresholdDeviationErrorComponent. Details: " + ", ".join(error_messages))
        else:
            return instance

    def to_json(self) -> str:
        """Returns the JSON representation of the actual instance"""
        if self.actual_instance is None:
            return "null"

        if hasattr(self.actual_instance, "to_json") and callable(self.actual_instance.to_json):
            return self.actual_instance.to_json()
        else:
            return json.dumps(self.actual_instance)

    def to_dict(self) -> Optional[Union[Dict[str, Any], IdentificationtasksPredictionsCreateBboxNonFieldErrorsErrorComponent, IdentificationtasksPredictionsCreateBboxXMaxErrorComponent, IdentificationtasksPredictionsCreateBboxXMinErrorComponent, IdentificationtasksPredictionsCreateBboxYMaxErrorComponent, IdentificationtasksPredictionsCreateBboxYMinErrorComponent, IdentificationtasksPredictionsCreateClassifierVersionErrorComponent, IdentificationtasksPredictionsCreateInsectConfidenceErrorComponent, IdentificationtasksPredictionsCreateIsFinalPredictionErrorComponent, IdentificationtasksPredictionsCreateNonFieldErrorsErrorComponent, IdentificationtasksPredictionsCreatePhotoUuidErrorComponent, IdentificationtasksPredictionsCreatePredictedClassErrorComponent, IdentificationtasksPredictionsCreateScoresAeAegyptiErrorComponent, IdentificationtasksPredictionsCreateScoresAeAlbopictusErrorComponent, IdentificationtasksPredictionsCreateScoresAeJaponicusErrorComponent, IdentificationtasksPredictionsCreateScoresAeKoreicusErrorComponent, IdentificationtasksPredictionsCreateScoresAnophelesErrorComponent, IdentificationtasksPredictionsCreateScoresCulexErrorComponent, IdentificationtasksPredictionsCreateScoresCulisetaErrorComponent, IdentificationtasksPredictionsCreateScoresNonFieldErrorsErrorComponent, IdentificationtasksPredictionsCreateScoresNotSureErrorComponent, IdentificationtasksPredictionsCreateScoresOtherSpeciesErrorComponent, IdentificationtasksPredictionsCreateThresholdDeviationErrorComponent]]:
        """Returns the dict representation of the actual instance"""
        if self.actual_instance is None:
            return None

        if hasattr(self.actual_instance, "to_dict") and callable(self.actual_instance.to_dict):
            return self.actual_instance.to_dict()
        else:
            # primitive type
            return self.actual_instance

    def to_str(self) -> str:
        """Returns the string representation of the actual instance"""
        return pprint.pformat(self.model_dump())


