# coding: utf-8

"""
    Mosquito Alert API

    Introducing API v1 for Mosquito Alert platform, a project desgined to facilitate citizen science initiatives and enable collaboration among scientists, public health officials, and environmental managers in the investigation and control of disease-carrying mosquitoes.

    The version of the OpenAPI document: v1
    Contact: it@mosquitoalert.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
import pprint
from pydantic import BaseModel, ConfigDict, Field, StrictStr, ValidationError, field_validator
from typing import Any, List, Optional
from mosquito_alert.models.photos_prediction_create_bbox_non_field_errors_error_component import PhotosPredictionCreateBboxNonFieldErrorsErrorComponent
from mosquito_alert.models.photos_prediction_create_bbox_x_max_error_component import PhotosPredictionCreateBboxXMaxErrorComponent
from mosquito_alert.models.photos_prediction_create_bbox_x_min_error_component import PhotosPredictionCreateBboxXMinErrorComponent
from mosquito_alert.models.photos_prediction_create_bbox_y_max_error_component import PhotosPredictionCreateBboxYMaxErrorComponent
from mosquito_alert.models.photos_prediction_create_bbox_y_min_error_component import PhotosPredictionCreateBboxYMinErrorComponent
from mosquito_alert.models.photos_prediction_create_classifier_version_error_component import PhotosPredictionCreateClassifierVersionErrorComponent
from mosquito_alert.models.photos_prediction_create_insect_confidence_error_component import PhotosPredictionCreateInsectConfidenceErrorComponent
from mosquito_alert.models.photos_prediction_create_non_field_errors_error_component import PhotosPredictionCreateNonFieldErrorsErrorComponent
from mosquito_alert.models.photos_prediction_create_predicted_class_error_component import PhotosPredictionCreatePredictedClassErrorComponent
from mosquito_alert.models.photos_prediction_create_scores_ae_aegypti_error_component import PhotosPredictionCreateScoresAeAegyptiErrorComponent
from mosquito_alert.models.photos_prediction_create_scores_ae_albopictus_error_component import PhotosPredictionCreateScoresAeAlbopictusErrorComponent
from mosquito_alert.models.photos_prediction_create_scores_ae_japonicus_error_component import PhotosPredictionCreateScoresAeJaponicusErrorComponent
from mosquito_alert.models.photos_prediction_create_scores_ae_koreicus_error_component import PhotosPredictionCreateScoresAeKoreicusErrorComponent
from mosquito_alert.models.photos_prediction_create_scores_anopheles_error_component import PhotosPredictionCreateScoresAnophelesErrorComponent
from mosquito_alert.models.photos_prediction_create_scores_culex_error_component import PhotosPredictionCreateScoresCulexErrorComponent
from mosquito_alert.models.photos_prediction_create_scores_culiseta_error_component import PhotosPredictionCreateScoresCulisetaErrorComponent
from mosquito_alert.models.photos_prediction_create_scores_non_field_errors_error_component import PhotosPredictionCreateScoresNonFieldErrorsErrorComponent
from mosquito_alert.models.photos_prediction_create_scores_not_sure_error_component import PhotosPredictionCreateScoresNotSureErrorComponent
from mosquito_alert.models.photos_prediction_create_scores_other_species_error_component import PhotosPredictionCreateScoresOtherSpeciesErrorComponent
from mosquito_alert.models.photos_prediction_create_threshold_deviation_error_component import PhotosPredictionCreateThresholdDeviationErrorComponent
from pydantic import StrictStr, Field
from typing import Union, List, Set, Optional, Dict
from typing_extensions import Literal, Self

PHOTOSPREDICTIONCREATEERROR_ONE_OF_SCHEMAS = ["PhotosPredictionCreateBboxNonFieldErrorsErrorComponent", "PhotosPredictionCreateBboxXMaxErrorComponent", "PhotosPredictionCreateBboxXMinErrorComponent", "PhotosPredictionCreateBboxYMaxErrorComponent", "PhotosPredictionCreateBboxYMinErrorComponent", "PhotosPredictionCreateClassifierVersionErrorComponent", "PhotosPredictionCreateInsectConfidenceErrorComponent", "PhotosPredictionCreateNonFieldErrorsErrorComponent", "PhotosPredictionCreatePredictedClassErrorComponent", "PhotosPredictionCreateScoresAeAegyptiErrorComponent", "PhotosPredictionCreateScoresAeAlbopictusErrorComponent", "PhotosPredictionCreateScoresAeJaponicusErrorComponent", "PhotosPredictionCreateScoresAeKoreicusErrorComponent", "PhotosPredictionCreateScoresAnophelesErrorComponent", "PhotosPredictionCreateScoresCulexErrorComponent", "PhotosPredictionCreateScoresCulisetaErrorComponent", "PhotosPredictionCreateScoresNonFieldErrorsErrorComponent", "PhotosPredictionCreateScoresNotSureErrorComponent", "PhotosPredictionCreateScoresOtherSpeciesErrorComponent", "PhotosPredictionCreateThresholdDeviationErrorComponent"]

class PhotosPredictionCreateError(BaseModel):
    """
    PhotosPredictionCreateError
    """
    # data type: PhotosPredictionCreateNonFieldErrorsErrorComponent
    oneof_schema_1_validator: Optional[PhotosPredictionCreateNonFieldErrorsErrorComponent] = None
    # data type: PhotosPredictionCreateBboxNonFieldErrorsErrorComponent
    oneof_schema_2_validator: Optional[PhotosPredictionCreateBboxNonFieldErrorsErrorComponent] = None
    # data type: PhotosPredictionCreateBboxXMinErrorComponent
    oneof_schema_3_validator: Optional[PhotosPredictionCreateBboxXMinErrorComponent] = None
    # data type: PhotosPredictionCreateBboxYMinErrorComponent
    oneof_schema_4_validator: Optional[PhotosPredictionCreateBboxYMinErrorComponent] = None
    # data type: PhotosPredictionCreateBboxXMaxErrorComponent
    oneof_schema_5_validator: Optional[PhotosPredictionCreateBboxXMaxErrorComponent] = None
    # data type: PhotosPredictionCreateBboxYMaxErrorComponent
    oneof_schema_6_validator: Optional[PhotosPredictionCreateBboxYMaxErrorComponent] = None
    # data type: PhotosPredictionCreateInsectConfidenceErrorComponent
    oneof_schema_7_validator: Optional[PhotosPredictionCreateInsectConfidenceErrorComponent] = None
    # data type: PhotosPredictionCreatePredictedClassErrorComponent
    oneof_schema_8_validator: Optional[PhotosPredictionCreatePredictedClassErrorComponent] = None
    # data type: PhotosPredictionCreateThresholdDeviationErrorComponent
    oneof_schema_9_validator: Optional[PhotosPredictionCreateThresholdDeviationErrorComponent] = None
    # data type: PhotosPredictionCreateScoresNonFieldErrorsErrorComponent
    oneof_schema_10_validator: Optional[PhotosPredictionCreateScoresNonFieldErrorsErrorComponent] = None
    # data type: PhotosPredictionCreateScoresAeAlbopictusErrorComponent
    oneof_schema_11_validator: Optional[PhotosPredictionCreateScoresAeAlbopictusErrorComponent] = None
    # data type: PhotosPredictionCreateScoresAeAegyptiErrorComponent
    oneof_schema_12_validator: Optional[PhotosPredictionCreateScoresAeAegyptiErrorComponent] = None
    # data type: PhotosPredictionCreateScoresAeJaponicusErrorComponent
    oneof_schema_13_validator: Optional[PhotosPredictionCreateScoresAeJaponicusErrorComponent] = None
    # data type: PhotosPredictionCreateScoresAeKoreicusErrorComponent
    oneof_schema_14_validator: Optional[PhotosPredictionCreateScoresAeKoreicusErrorComponent] = None
    # data type: PhotosPredictionCreateScoresCulexErrorComponent
    oneof_schema_15_validator: Optional[PhotosPredictionCreateScoresCulexErrorComponent] = None
    # data type: PhotosPredictionCreateScoresAnophelesErrorComponent
    oneof_schema_16_validator: Optional[PhotosPredictionCreateScoresAnophelesErrorComponent] = None
    # data type: PhotosPredictionCreateScoresCulisetaErrorComponent
    oneof_schema_17_validator: Optional[PhotosPredictionCreateScoresCulisetaErrorComponent] = None
    # data type: PhotosPredictionCreateScoresOtherSpeciesErrorComponent
    oneof_schema_18_validator: Optional[PhotosPredictionCreateScoresOtherSpeciesErrorComponent] = None
    # data type: PhotosPredictionCreateScoresNotSureErrorComponent
    oneof_schema_19_validator: Optional[PhotosPredictionCreateScoresNotSureErrorComponent] = None
    # data type: PhotosPredictionCreateClassifierVersionErrorComponent
    oneof_schema_20_validator: Optional[PhotosPredictionCreateClassifierVersionErrorComponent] = None
    actual_instance: Optional[Union[PhotosPredictionCreateBboxNonFieldErrorsErrorComponent, PhotosPredictionCreateBboxXMaxErrorComponent, PhotosPredictionCreateBboxXMinErrorComponent, PhotosPredictionCreateBboxYMaxErrorComponent, PhotosPredictionCreateBboxYMinErrorComponent, PhotosPredictionCreateClassifierVersionErrorComponent, PhotosPredictionCreateInsectConfidenceErrorComponent, PhotosPredictionCreateNonFieldErrorsErrorComponent, PhotosPredictionCreatePredictedClassErrorComponent, PhotosPredictionCreateScoresAeAegyptiErrorComponent, PhotosPredictionCreateScoresAeAlbopictusErrorComponent, PhotosPredictionCreateScoresAeJaponicusErrorComponent, PhotosPredictionCreateScoresAeKoreicusErrorComponent, PhotosPredictionCreateScoresAnophelesErrorComponent, PhotosPredictionCreateScoresCulexErrorComponent, PhotosPredictionCreateScoresCulisetaErrorComponent, PhotosPredictionCreateScoresNonFieldErrorsErrorComponent, PhotosPredictionCreateScoresNotSureErrorComponent, PhotosPredictionCreateScoresOtherSpeciesErrorComponent, PhotosPredictionCreateThresholdDeviationErrorComponent]] = None
    one_of_schemas: Set[str] = { "PhotosPredictionCreateBboxNonFieldErrorsErrorComponent", "PhotosPredictionCreateBboxXMaxErrorComponent", "PhotosPredictionCreateBboxXMinErrorComponent", "PhotosPredictionCreateBboxYMaxErrorComponent", "PhotosPredictionCreateBboxYMinErrorComponent", "PhotosPredictionCreateClassifierVersionErrorComponent", "PhotosPredictionCreateInsectConfidenceErrorComponent", "PhotosPredictionCreateNonFieldErrorsErrorComponent", "PhotosPredictionCreatePredictedClassErrorComponent", "PhotosPredictionCreateScoresAeAegyptiErrorComponent", "PhotosPredictionCreateScoresAeAlbopictusErrorComponent", "PhotosPredictionCreateScoresAeJaponicusErrorComponent", "PhotosPredictionCreateScoresAeKoreicusErrorComponent", "PhotosPredictionCreateScoresAnophelesErrorComponent", "PhotosPredictionCreateScoresCulexErrorComponent", "PhotosPredictionCreateScoresCulisetaErrorComponent", "PhotosPredictionCreateScoresNonFieldErrorsErrorComponent", "PhotosPredictionCreateScoresNotSureErrorComponent", "PhotosPredictionCreateScoresOtherSpeciesErrorComponent", "PhotosPredictionCreateThresholdDeviationErrorComponent" }

    model_config = ConfigDict(
        validate_assignment=True,
        protected_namespaces=(),
    )


    discriminator_value_class_map: Dict[str, str] = {
    }

    def __init__(self, *args, **kwargs) -> None:
        if args:
            if len(args) > 1:
                raise ValueError("If a position argument is used, only 1 is allowed to set `actual_instance`")
            if kwargs:
                raise ValueError("If a position argument is used, keyword arguments cannot be used.")
            super().__init__(actual_instance=args[0])
        else:
            super().__init__(**kwargs)

    @field_validator('actual_instance')
    def actual_instance_must_validate_oneof(cls, v):
        instance = PhotosPredictionCreateError.model_construct()
        error_messages = []
        match = 0
        # validate data type: PhotosPredictionCreateNonFieldErrorsErrorComponent
        if not isinstance(v, PhotosPredictionCreateNonFieldErrorsErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `PhotosPredictionCreateNonFieldErrorsErrorComponent`")
        else:
            match += 1
        # validate data type: PhotosPredictionCreateBboxNonFieldErrorsErrorComponent
        if not isinstance(v, PhotosPredictionCreateBboxNonFieldErrorsErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `PhotosPredictionCreateBboxNonFieldErrorsErrorComponent`")
        else:
            match += 1
        # validate data type: PhotosPredictionCreateBboxXMinErrorComponent
        if not isinstance(v, PhotosPredictionCreateBboxXMinErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `PhotosPredictionCreateBboxXMinErrorComponent`")
        else:
            match += 1
        # validate data type: PhotosPredictionCreateBboxYMinErrorComponent
        if not isinstance(v, PhotosPredictionCreateBboxYMinErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `PhotosPredictionCreateBboxYMinErrorComponent`")
        else:
            match += 1
        # validate data type: PhotosPredictionCreateBboxXMaxErrorComponent
        if not isinstance(v, PhotosPredictionCreateBboxXMaxErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `PhotosPredictionCreateBboxXMaxErrorComponent`")
        else:
            match += 1
        # validate data type: PhotosPredictionCreateBboxYMaxErrorComponent
        if not isinstance(v, PhotosPredictionCreateBboxYMaxErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `PhotosPredictionCreateBboxYMaxErrorComponent`")
        else:
            match += 1
        # validate data type: PhotosPredictionCreateInsectConfidenceErrorComponent
        if not isinstance(v, PhotosPredictionCreateInsectConfidenceErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `PhotosPredictionCreateInsectConfidenceErrorComponent`")
        else:
            match += 1
        # validate data type: PhotosPredictionCreatePredictedClassErrorComponent
        if not isinstance(v, PhotosPredictionCreatePredictedClassErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `PhotosPredictionCreatePredictedClassErrorComponent`")
        else:
            match += 1
        # validate data type: PhotosPredictionCreateThresholdDeviationErrorComponent
        if not isinstance(v, PhotosPredictionCreateThresholdDeviationErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `PhotosPredictionCreateThresholdDeviationErrorComponent`")
        else:
            match += 1
        # validate data type: PhotosPredictionCreateScoresNonFieldErrorsErrorComponent
        if not isinstance(v, PhotosPredictionCreateScoresNonFieldErrorsErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `PhotosPredictionCreateScoresNonFieldErrorsErrorComponent`")
        else:
            match += 1
        # validate data type: PhotosPredictionCreateScoresAeAlbopictusErrorComponent
        if not isinstance(v, PhotosPredictionCreateScoresAeAlbopictusErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `PhotosPredictionCreateScoresAeAlbopictusErrorComponent`")
        else:
            match += 1
        # validate data type: PhotosPredictionCreateScoresAeAegyptiErrorComponent
        if not isinstance(v, PhotosPredictionCreateScoresAeAegyptiErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `PhotosPredictionCreateScoresAeAegyptiErrorComponent`")
        else:
            match += 1
        # validate data type: PhotosPredictionCreateScoresAeJaponicusErrorComponent
        if not isinstance(v, PhotosPredictionCreateScoresAeJaponicusErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `PhotosPredictionCreateScoresAeJaponicusErrorComponent`")
        else:
            match += 1
        # validate data type: PhotosPredictionCreateScoresAeKoreicusErrorComponent
        if not isinstance(v, PhotosPredictionCreateScoresAeKoreicusErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `PhotosPredictionCreateScoresAeKoreicusErrorComponent`")
        else:
            match += 1
        # validate data type: PhotosPredictionCreateScoresCulexErrorComponent
        if not isinstance(v, PhotosPredictionCreateScoresCulexErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `PhotosPredictionCreateScoresCulexErrorComponent`")
        else:
            match += 1
        # validate data type: PhotosPredictionCreateScoresAnophelesErrorComponent
        if not isinstance(v, PhotosPredictionCreateScoresAnophelesErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `PhotosPredictionCreateScoresAnophelesErrorComponent`")
        else:
            match += 1
        # validate data type: PhotosPredictionCreateScoresCulisetaErrorComponent
        if not isinstance(v, PhotosPredictionCreateScoresCulisetaErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `PhotosPredictionCreateScoresCulisetaErrorComponent`")
        else:
            match += 1
        # validate data type: PhotosPredictionCreateScoresOtherSpeciesErrorComponent
        if not isinstance(v, PhotosPredictionCreateScoresOtherSpeciesErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `PhotosPredictionCreateScoresOtherSpeciesErrorComponent`")
        else:
            match += 1
        # validate data type: PhotosPredictionCreateScoresNotSureErrorComponent
        if not isinstance(v, PhotosPredictionCreateScoresNotSureErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `PhotosPredictionCreateScoresNotSureErrorComponent`")
        else:
            match += 1
        # validate data type: PhotosPredictionCreateClassifierVersionErrorComponent
        if not isinstance(v, PhotosPredictionCreateClassifierVersionErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `PhotosPredictionCreateClassifierVersionErrorComponent`")
        else:
            match += 1
        if match > 1:
            # more than 1 match
            raise ValueError("Multiple matches found when setting `actual_instance` in PhotosPredictionCreateError with oneOf schemas: PhotosPredictionCreateBboxNonFieldErrorsErrorComponent, PhotosPredictionCreateBboxXMaxErrorComponent, PhotosPredictionCreateBboxXMinErrorComponent, PhotosPredictionCreateBboxYMaxErrorComponent, PhotosPredictionCreateBboxYMinErrorComponent, PhotosPredictionCreateClassifierVersionErrorComponent, PhotosPredictionCreateInsectConfidenceErrorComponent, PhotosPredictionCreateNonFieldErrorsErrorComponent, PhotosPredictionCreatePredictedClassErrorComponent, PhotosPredictionCreateScoresAeAegyptiErrorComponent, PhotosPredictionCreateScoresAeAlbopictusErrorComponent, PhotosPredictionCreateScoresAeJaponicusErrorComponent, PhotosPredictionCreateScoresAeKoreicusErrorComponent, PhotosPredictionCreateScoresAnophelesErrorComponent, PhotosPredictionCreateScoresCulexErrorComponent, PhotosPredictionCreateScoresCulisetaErrorComponent, PhotosPredictionCreateScoresNonFieldErrorsErrorComponent, PhotosPredictionCreateScoresNotSureErrorComponent, PhotosPredictionCreateScoresOtherSpeciesErrorComponent, PhotosPredictionCreateThresholdDeviationErrorComponent. Details: " + ", ".join(error_messages))
        elif match == 0:
            # no match
            raise ValueError("No match found when setting `actual_instance` in PhotosPredictionCreateError with oneOf schemas: PhotosPredictionCreateBboxNonFieldErrorsErrorComponent, PhotosPredictionCreateBboxXMaxErrorComponent, PhotosPredictionCreateBboxXMinErrorComponent, PhotosPredictionCreateBboxYMaxErrorComponent, PhotosPredictionCreateBboxYMinErrorComponent, PhotosPredictionCreateClassifierVersionErrorComponent, PhotosPredictionCreateInsectConfidenceErrorComponent, PhotosPredictionCreateNonFieldErrorsErrorComponent, PhotosPredictionCreatePredictedClassErrorComponent, PhotosPredictionCreateScoresAeAegyptiErrorComponent, PhotosPredictionCreateScoresAeAlbopictusErrorComponent, PhotosPredictionCreateScoresAeJaponicusErrorComponent, PhotosPredictionCreateScoresAeKoreicusErrorComponent, PhotosPredictionCreateScoresAnophelesErrorComponent, PhotosPredictionCreateScoresCulexErrorComponent, PhotosPredictionCreateScoresCulisetaErrorComponent, PhotosPredictionCreateScoresNonFieldErrorsErrorComponent, PhotosPredictionCreateScoresNotSureErrorComponent, PhotosPredictionCreateScoresOtherSpeciesErrorComponent, PhotosPredictionCreateThresholdDeviationErrorComponent. Details: " + ", ".join(error_messages))
        else:
            return v

    @classmethod
    def from_dict(cls, obj: Union[str, Dict[str, Any]]) -> Self:
        return cls.from_json(json.dumps(obj))

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Returns the object represented by the json string"""
        instance = cls.model_construct()
        error_messages = []
        match = 0

        # deserialize data into PhotosPredictionCreateNonFieldErrorsErrorComponent
        try:
            instance.actual_instance = PhotosPredictionCreateNonFieldErrorsErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into PhotosPredictionCreateBboxNonFieldErrorsErrorComponent
        try:
            instance.actual_instance = PhotosPredictionCreateBboxNonFieldErrorsErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into PhotosPredictionCreateBboxXMinErrorComponent
        try:
            instance.actual_instance = PhotosPredictionCreateBboxXMinErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into PhotosPredictionCreateBboxYMinErrorComponent
        try:
            instance.actual_instance = PhotosPredictionCreateBboxYMinErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into PhotosPredictionCreateBboxXMaxErrorComponent
        try:
            instance.actual_instance = PhotosPredictionCreateBboxXMaxErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into PhotosPredictionCreateBboxYMaxErrorComponent
        try:
            instance.actual_instance = PhotosPredictionCreateBboxYMaxErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into PhotosPredictionCreateInsectConfidenceErrorComponent
        try:
            instance.actual_instance = PhotosPredictionCreateInsectConfidenceErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into PhotosPredictionCreatePredictedClassErrorComponent
        try:
            instance.actual_instance = PhotosPredictionCreatePredictedClassErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into PhotosPredictionCreateThresholdDeviationErrorComponent
        try:
            instance.actual_instance = PhotosPredictionCreateThresholdDeviationErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into PhotosPredictionCreateScoresNonFieldErrorsErrorComponent
        try:
            instance.actual_instance = PhotosPredictionCreateScoresNonFieldErrorsErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into PhotosPredictionCreateScoresAeAlbopictusErrorComponent
        try:
            instance.actual_instance = PhotosPredictionCreateScoresAeAlbopictusErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into PhotosPredictionCreateScoresAeAegyptiErrorComponent
        try:
            instance.actual_instance = PhotosPredictionCreateScoresAeAegyptiErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into PhotosPredictionCreateScoresAeJaponicusErrorComponent
        try:
            instance.actual_instance = PhotosPredictionCreateScoresAeJaponicusErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into PhotosPredictionCreateScoresAeKoreicusErrorComponent
        try:
            instance.actual_instance = PhotosPredictionCreateScoresAeKoreicusErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into PhotosPredictionCreateScoresCulexErrorComponent
        try:
            instance.actual_instance = PhotosPredictionCreateScoresCulexErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into PhotosPredictionCreateScoresAnophelesErrorComponent
        try:
            instance.actual_instance = PhotosPredictionCreateScoresAnophelesErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into PhotosPredictionCreateScoresCulisetaErrorComponent
        try:
            instance.actual_instance = PhotosPredictionCreateScoresCulisetaErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into PhotosPredictionCreateScoresOtherSpeciesErrorComponent
        try:
            instance.actual_instance = PhotosPredictionCreateScoresOtherSpeciesErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into PhotosPredictionCreateScoresNotSureErrorComponent
        try:
            instance.actual_instance = PhotosPredictionCreateScoresNotSureErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into PhotosPredictionCreateClassifierVersionErrorComponent
        try:
            instance.actual_instance = PhotosPredictionCreateClassifierVersionErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))

        if match > 1:
            # more than 1 match
            raise ValueError("Multiple matches found when deserializing the JSON string into PhotosPredictionCreateError with oneOf schemas: PhotosPredictionCreateBboxNonFieldErrorsErrorComponent, PhotosPredictionCreateBboxXMaxErrorComponent, PhotosPredictionCreateBboxXMinErrorComponent, PhotosPredictionCreateBboxYMaxErrorComponent, PhotosPredictionCreateBboxYMinErrorComponent, PhotosPredictionCreateClassifierVersionErrorComponent, PhotosPredictionCreateInsectConfidenceErrorComponent, PhotosPredictionCreateNonFieldErrorsErrorComponent, PhotosPredictionCreatePredictedClassErrorComponent, PhotosPredictionCreateScoresAeAegyptiErrorComponent, PhotosPredictionCreateScoresAeAlbopictusErrorComponent, PhotosPredictionCreateScoresAeJaponicusErrorComponent, PhotosPredictionCreateScoresAeKoreicusErrorComponent, PhotosPredictionCreateScoresAnophelesErrorComponent, PhotosPredictionCreateScoresCulexErrorComponent, PhotosPredictionCreateScoresCulisetaErrorComponent, PhotosPredictionCreateScoresNonFieldErrorsErrorComponent, PhotosPredictionCreateScoresNotSureErrorComponent, PhotosPredictionCreateScoresOtherSpeciesErrorComponent, PhotosPredictionCreateThresholdDeviationErrorComponent. Details: " + ", ".join(error_messages))
        elif match == 0:
            # no match
            raise ValueError("No match found when deserializing the JSON string into PhotosPredictionCreateError with oneOf schemas: PhotosPredictionCreateBboxNonFieldErrorsErrorComponent, PhotosPredictionCreateBboxXMaxErrorComponent, PhotosPredictionCreateBboxXMinErrorComponent, PhotosPredictionCreateBboxYMaxErrorComponent, PhotosPredictionCreateBboxYMinErrorComponent, PhotosPredictionCreateClassifierVersionErrorComponent, PhotosPredictionCreateInsectConfidenceErrorComponent, PhotosPredictionCreateNonFieldErrorsErrorComponent, PhotosPredictionCreatePredictedClassErrorComponent, PhotosPredictionCreateScoresAeAegyptiErrorComponent, PhotosPredictionCreateScoresAeAlbopictusErrorComponent, PhotosPredictionCreateScoresAeJaponicusErrorComponent, PhotosPredictionCreateScoresAeKoreicusErrorComponent, PhotosPredictionCreateScoresAnophelesErrorComponent, PhotosPredictionCreateScoresCulexErrorComponent, PhotosPredictionCreateScoresCulisetaErrorComponent, PhotosPredictionCreateScoresNonFieldErrorsErrorComponent, PhotosPredictionCreateScoresNotSureErrorComponent, PhotosPredictionCreateScoresOtherSpeciesErrorComponent, PhotosPredictionCreateThresholdDeviationErrorComponent. Details: " + ", ".join(error_messages))
        else:
            return instance

    def to_json(self) -> str:
        """Returns the JSON representation of the actual instance"""
        if self.actual_instance is None:
            return "null"

        if hasattr(self.actual_instance, "to_json") and callable(self.actual_instance.to_json):
            return self.actual_instance.to_json()
        else:
            return json.dumps(self.actual_instance)

    def to_dict(self) -> Optional[Union[Dict[str, Any], PhotosPredictionCreateBboxNonFieldErrorsErrorComponent, PhotosPredictionCreateBboxXMaxErrorComponent, PhotosPredictionCreateBboxXMinErrorComponent, PhotosPredictionCreateBboxYMaxErrorComponent, PhotosPredictionCreateBboxYMinErrorComponent, PhotosPredictionCreateClassifierVersionErrorComponent, PhotosPredictionCreateInsectConfidenceErrorComponent, PhotosPredictionCreateNonFieldErrorsErrorComponent, PhotosPredictionCreatePredictedClassErrorComponent, PhotosPredictionCreateScoresAeAegyptiErrorComponent, PhotosPredictionCreateScoresAeAlbopictusErrorComponent, PhotosPredictionCreateScoresAeJaponicusErrorComponent, PhotosPredictionCreateScoresAeKoreicusErrorComponent, PhotosPredictionCreateScoresAnophelesErrorComponent, PhotosPredictionCreateScoresCulexErrorComponent, PhotosPredictionCreateScoresCulisetaErrorComponent, PhotosPredictionCreateScoresNonFieldErrorsErrorComponent, PhotosPredictionCreateScoresNotSureErrorComponent, PhotosPredictionCreateScoresOtherSpeciesErrorComponent, PhotosPredictionCreateThresholdDeviationErrorComponent]]:
        """Returns the dict representation of the actual instance"""
        if self.actual_instance is None:
            return None

        if hasattr(self.actual_instance, "to_dict") and callable(self.actual_instance.to_dict):
            return self.actual_instance.to_dict()
        else:
            # primitive type
            return self.actual_instance

    def to_str(self) -> str:
        """Returns the string representation of the actual instance"""
        return pprint.pformat(self.model_dump())


