# coding: utf-8

"""
    Mosquito Alert API

    Introducing API v1 for Mosquito Alert platform, a project desgined to facilitate citizen science initiatives and enable collaboration among scientists, public health officials, and environmental managers in the investigation and control of disease-carrying mosquitoes.

    The version of the OpenAPI document: v1
    Contact: it@mosquitoalert.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
import pprint
from pydantic import BaseModel, ConfigDict, Field, StrictStr, ValidationError, field_validator
from typing import Any, List, Optional
from mosquito_alert.models.identificationtasks_predictions_update_bbox_non_field_errors_error_component import IdentificationtasksPredictionsUpdateBboxNonFieldErrorsErrorComponent
from mosquito_alert.models.identificationtasks_predictions_update_bbox_x_max_error_component import IdentificationtasksPredictionsUpdateBboxXMaxErrorComponent
from mosquito_alert.models.identificationtasks_predictions_update_bbox_x_min_error_component import IdentificationtasksPredictionsUpdateBboxXMinErrorComponent
from mosquito_alert.models.identificationtasks_predictions_update_bbox_y_max_error_component import IdentificationtasksPredictionsUpdateBboxYMaxErrorComponent
from mosquito_alert.models.identificationtasks_predictions_update_bbox_y_min_error_component import IdentificationtasksPredictionsUpdateBboxYMinErrorComponent
from mosquito_alert.models.identificationtasks_predictions_update_classifier_version_error_component import IdentificationtasksPredictionsUpdateClassifierVersionErrorComponent
from mosquito_alert.models.identificationtasks_predictions_update_insect_confidence_error_component import IdentificationtasksPredictionsUpdateInsectConfidenceErrorComponent
from mosquito_alert.models.identificationtasks_predictions_update_is_decisive_error_component import IdentificationtasksPredictionsUpdateIsDecisiveErrorComponent
from mosquito_alert.models.identificationtasks_predictions_update_non_field_errors_error_component import IdentificationtasksPredictionsUpdateNonFieldErrorsErrorComponent
from mosquito_alert.models.identificationtasks_predictions_update_predicted_class_error_component import IdentificationtasksPredictionsUpdatePredictedClassErrorComponent
from mosquito_alert.models.identificationtasks_predictions_update_scores_ae_aegypti_error_component import IdentificationtasksPredictionsUpdateScoresAeAegyptiErrorComponent
from mosquito_alert.models.identificationtasks_predictions_update_scores_ae_albopictus_error_component import IdentificationtasksPredictionsUpdateScoresAeAlbopictusErrorComponent
from mosquito_alert.models.identificationtasks_predictions_update_scores_ae_japonicus_error_component import IdentificationtasksPredictionsUpdateScoresAeJaponicusErrorComponent
from mosquito_alert.models.identificationtasks_predictions_update_scores_ae_koreicus_error_component import IdentificationtasksPredictionsUpdateScoresAeKoreicusErrorComponent
from mosquito_alert.models.identificationtasks_predictions_update_scores_anopheles_error_component import IdentificationtasksPredictionsUpdateScoresAnophelesErrorComponent
from mosquito_alert.models.identificationtasks_predictions_update_scores_culex_error_component import IdentificationtasksPredictionsUpdateScoresCulexErrorComponent
from mosquito_alert.models.identificationtasks_predictions_update_scores_culiseta_error_component import IdentificationtasksPredictionsUpdateScoresCulisetaErrorComponent
from mosquito_alert.models.identificationtasks_predictions_update_scores_non_field_errors_error_component import IdentificationtasksPredictionsUpdateScoresNonFieldErrorsErrorComponent
from mosquito_alert.models.identificationtasks_predictions_update_scores_not_sure_error_component import IdentificationtasksPredictionsUpdateScoresNotSureErrorComponent
from mosquito_alert.models.identificationtasks_predictions_update_scores_other_species_error_component import IdentificationtasksPredictionsUpdateScoresOtherSpeciesErrorComponent
from mosquito_alert.models.identificationtasks_predictions_update_threshold_deviation_error_component import IdentificationtasksPredictionsUpdateThresholdDeviationErrorComponent
from pydantic import StrictStr, Field
from typing import Union, List, Set, Optional, Dict
from typing_extensions import Literal, Self

IDENTIFICATIONTASKSPREDICTIONSUPDATEERROR_ONE_OF_SCHEMAS = ["IdentificationtasksPredictionsUpdateBboxNonFieldErrorsErrorComponent", "IdentificationtasksPredictionsUpdateBboxXMaxErrorComponent", "IdentificationtasksPredictionsUpdateBboxXMinErrorComponent", "IdentificationtasksPredictionsUpdateBboxYMaxErrorComponent", "IdentificationtasksPredictionsUpdateBboxYMinErrorComponent", "IdentificationtasksPredictionsUpdateClassifierVersionErrorComponent", "IdentificationtasksPredictionsUpdateInsectConfidenceErrorComponent", "IdentificationtasksPredictionsUpdateIsDecisiveErrorComponent", "IdentificationtasksPredictionsUpdateNonFieldErrorsErrorComponent", "IdentificationtasksPredictionsUpdatePredictedClassErrorComponent", "IdentificationtasksPredictionsUpdateScoresAeAegyptiErrorComponent", "IdentificationtasksPredictionsUpdateScoresAeAlbopictusErrorComponent", "IdentificationtasksPredictionsUpdateScoresAeJaponicusErrorComponent", "IdentificationtasksPredictionsUpdateScoresAeKoreicusErrorComponent", "IdentificationtasksPredictionsUpdateScoresAnophelesErrorComponent", "IdentificationtasksPredictionsUpdateScoresCulexErrorComponent", "IdentificationtasksPredictionsUpdateScoresCulisetaErrorComponent", "IdentificationtasksPredictionsUpdateScoresNonFieldErrorsErrorComponent", "IdentificationtasksPredictionsUpdateScoresNotSureErrorComponent", "IdentificationtasksPredictionsUpdateScoresOtherSpeciesErrorComponent", "IdentificationtasksPredictionsUpdateThresholdDeviationErrorComponent"]

class IdentificationtasksPredictionsUpdateError(BaseModel):
    """
    IdentificationtasksPredictionsUpdateError
    """
    # data type: IdentificationtasksPredictionsUpdateNonFieldErrorsErrorComponent
    oneof_schema_1_validator: Optional[IdentificationtasksPredictionsUpdateNonFieldErrorsErrorComponent] = None
    # data type: IdentificationtasksPredictionsUpdateBboxNonFieldErrorsErrorComponent
    oneof_schema_2_validator: Optional[IdentificationtasksPredictionsUpdateBboxNonFieldErrorsErrorComponent] = None
    # data type: IdentificationtasksPredictionsUpdateBboxXMinErrorComponent
    oneof_schema_3_validator: Optional[IdentificationtasksPredictionsUpdateBboxXMinErrorComponent] = None
    # data type: IdentificationtasksPredictionsUpdateBboxYMinErrorComponent
    oneof_schema_4_validator: Optional[IdentificationtasksPredictionsUpdateBboxYMinErrorComponent] = None
    # data type: IdentificationtasksPredictionsUpdateBboxXMaxErrorComponent
    oneof_schema_5_validator: Optional[IdentificationtasksPredictionsUpdateBboxXMaxErrorComponent] = None
    # data type: IdentificationtasksPredictionsUpdateBboxYMaxErrorComponent
    oneof_schema_6_validator: Optional[IdentificationtasksPredictionsUpdateBboxYMaxErrorComponent] = None
    # data type: IdentificationtasksPredictionsUpdateInsectConfidenceErrorComponent
    oneof_schema_7_validator: Optional[IdentificationtasksPredictionsUpdateInsectConfidenceErrorComponent] = None
    # data type: IdentificationtasksPredictionsUpdatePredictedClassErrorComponent
    oneof_schema_8_validator: Optional[IdentificationtasksPredictionsUpdatePredictedClassErrorComponent] = None
    # data type: IdentificationtasksPredictionsUpdateThresholdDeviationErrorComponent
    oneof_schema_9_validator: Optional[IdentificationtasksPredictionsUpdateThresholdDeviationErrorComponent] = None
    # data type: IdentificationtasksPredictionsUpdateIsDecisiveErrorComponent
    oneof_schema_10_validator: Optional[IdentificationtasksPredictionsUpdateIsDecisiveErrorComponent] = None
    # data type: IdentificationtasksPredictionsUpdateScoresNonFieldErrorsErrorComponent
    oneof_schema_11_validator: Optional[IdentificationtasksPredictionsUpdateScoresNonFieldErrorsErrorComponent] = None
    # data type: IdentificationtasksPredictionsUpdateScoresAeAlbopictusErrorComponent
    oneof_schema_12_validator: Optional[IdentificationtasksPredictionsUpdateScoresAeAlbopictusErrorComponent] = None
    # data type: IdentificationtasksPredictionsUpdateScoresAeAegyptiErrorComponent
    oneof_schema_13_validator: Optional[IdentificationtasksPredictionsUpdateScoresAeAegyptiErrorComponent] = None
    # data type: IdentificationtasksPredictionsUpdateScoresAeJaponicusErrorComponent
    oneof_schema_14_validator: Optional[IdentificationtasksPredictionsUpdateScoresAeJaponicusErrorComponent] = None
    # data type: IdentificationtasksPredictionsUpdateScoresAeKoreicusErrorComponent
    oneof_schema_15_validator: Optional[IdentificationtasksPredictionsUpdateScoresAeKoreicusErrorComponent] = None
    # data type: IdentificationtasksPredictionsUpdateScoresCulexErrorComponent
    oneof_schema_16_validator: Optional[IdentificationtasksPredictionsUpdateScoresCulexErrorComponent] = None
    # data type: IdentificationtasksPredictionsUpdateScoresAnophelesErrorComponent
    oneof_schema_17_validator: Optional[IdentificationtasksPredictionsUpdateScoresAnophelesErrorComponent] = None
    # data type: IdentificationtasksPredictionsUpdateScoresCulisetaErrorComponent
    oneof_schema_18_validator: Optional[IdentificationtasksPredictionsUpdateScoresCulisetaErrorComponent] = None
    # data type: IdentificationtasksPredictionsUpdateScoresOtherSpeciesErrorComponent
    oneof_schema_19_validator: Optional[IdentificationtasksPredictionsUpdateScoresOtherSpeciesErrorComponent] = None
    # data type: IdentificationtasksPredictionsUpdateScoresNotSureErrorComponent
    oneof_schema_20_validator: Optional[IdentificationtasksPredictionsUpdateScoresNotSureErrorComponent] = None
    # data type: IdentificationtasksPredictionsUpdateClassifierVersionErrorComponent
    oneof_schema_21_validator: Optional[IdentificationtasksPredictionsUpdateClassifierVersionErrorComponent] = None
    actual_instance: Optional[Union[IdentificationtasksPredictionsUpdateBboxNonFieldErrorsErrorComponent, IdentificationtasksPredictionsUpdateBboxXMaxErrorComponent, IdentificationtasksPredictionsUpdateBboxXMinErrorComponent, IdentificationtasksPredictionsUpdateBboxYMaxErrorComponent, IdentificationtasksPredictionsUpdateBboxYMinErrorComponent, IdentificationtasksPredictionsUpdateClassifierVersionErrorComponent, IdentificationtasksPredictionsUpdateInsectConfidenceErrorComponent, IdentificationtasksPredictionsUpdateIsDecisiveErrorComponent, IdentificationtasksPredictionsUpdateNonFieldErrorsErrorComponent, IdentificationtasksPredictionsUpdatePredictedClassErrorComponent, IdentificationtasksPredictionsUpdateScoresAeAegyptiErrorComponent, IdentificationtasksPredictionsUpdateScoresAeAlbopictusErrorComponent, IdentificationtasksPredictionsUpdateScoresAeJaponicusErrorComponent, IdentificationtasksPredictionsUpdateScoresAeKoreicusErrorComponent, IdentificationtasksPredictionsUpdateScoresAnophelesErrorComponent, IdentificationtasksPredictionsUpdateScoresCulexErrorComponent, IdentificationtasksPredictionsUpdateScoresCulisetaErrorComponent, IdentificationtasksPredictionsUpdateScoresNonFieldErrorsErrorComponent, IdentificationtasksPredictionsUpdateScoresNotSureErrorComponent, IdentificationtasksPredictionsUpdateScoresOtherSpeciesErrorComponent, IdentificationtasksPredictionsUpdateThresholdDeviationErrorComponent]] = None
    one_of_schemas: Set[str] = { "IdentificationtasksPredictionsUpdateBboxNonFieldErrorsErrorComponent", "IdentificationtasksPredictionsUpdateBboxXMaxErrorComponent", "IdentificationtasksPredictionsUpdateBboxXMinErrorComponent", "IdentificationtasksPredictionsUpdateBboxYMaxErrorComponent", "IdentificationtasksPredictionsUpdateBboxYMinErrorComponent", "IdentificationtasksPredictionsUpdateClassifierVersionErrorComponent", "IdentificationtasksPredictionsUpdateInsectConfidenceErrorComponent", "IdentificationtasksPredictionsUpdateIsDecisiveErrorComponent", "IdentificationtasksPredictionsUpdateNonFieldErrorsErrorComponent", "IdentificationtasksPredictionsUpdatePredictedClassErrorComponent", "IdentificationtasksPredictionsUpdateScoresAeAegyptiErrorComponent", "IdentificationtasksPredictionsUpdateScoresAeAlbopictusErrorComponent", "IdentificationtasksPredictionsUpdateScoresAeJaponicusErrorComponent", "IdentificationtasksPredictionsUpdateScoresAeKoreicusErrorComponent", "IdentificationtasksPredictionsUpdateScoresAnophelesErrorComponent", "IdentificationtasksPredictionsUpdateScoresCulexErrorComponent", "IdentificationtasksPredictionsUpdateScoresCulisetaErrorComponent", "IdentificationtasksPredictionsUpdateScoresNonFieldErrorsErrorComponent", "IdentificationtasksPredictionsUpdateScoresNotSureErrorComponent", "IdentificationtasksPredictionsUpdateScoresOtherSpeciesErrorComponent", "IdentificationtasksPredictionsUpdateThresholdDeviationErrorComponent" }

    model_config = ConfigDict(
        validate_assignment=True,
        protected_namespaces=(),
    )


    discriminator_value_class_map: Dict[str, str] = {
    }

    def __init__(self, *args, **kwargs) -> None:
        if args:
            if len(args) > 1:
                raise ValueError("If a position argument is used, only 1 is allowed to set `actual_instance`")
            if kwargs:
                raise ValueError("If a position argument is used, keyword arguments cannot be used.")
            super().__init__(actual_instance=args[0])
        else:
            super().__init__(**kwargs)

    @field_validator('actual_instance')
    def actual_instance_must_validate_oneof(cls, v):
        instance = IdentificationtasksPredictionsUpdateError.model_construct()
        error_messages = []
        match = 0
        # validate data type: IdentificationtasksPredictionsUpdateNonFieldErrorsErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsUpdateNonFieldErrorsErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsUpdateNonFieldErrorsErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsUpdateBboxNonFieldErrorsErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsUpdateBboxNonFieldErrorsErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsUpdateBboxNonFieldErrorsErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsUpdateBboxXMinErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsUpdateBboxXMinErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsUpdateBboxXMinErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsUpdateBboxYMinErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsUpdateBboxYMinErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsUpdateBboxYMinErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsUpdateBboxXMaxErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsUpdateBboxXMaxErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsUpdateBboxXMaxErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsUpdateBboxYMaxErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsUpdateBboxYMaxErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsUpdateBboxYMaxErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsUpdateInsectConfidenceErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsUpdateInsectConfidenceErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsUpdateInsectConfidenceErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsUpdatePredictedClassErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsUpdatePredictedClassErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsUpdatePredictedClassErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsUpdateThresholdDeviationErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsUpdateThresholdDeviationErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsUpdateThresholdDeviationErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsUpdateIsDecisiveErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsUpdateIsDecisiveErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsUpdateIsDecisiveErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsUpdateScoresNonFieldErrorsErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsUpdateScoresNonFieldErrorsErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsUpdateScoresNonFieldErrorsErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsUpdateScoresAeAlbopictusErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsUpdateScoresAeAlbopictusErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsUpdateScoresAeAlbopictusErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsUpdateScoresAeAegyptiErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsUpdateScoresAeAegyptiErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsUpdateScoresAeAegyptiErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsUpdateScoresAeJaponicusErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsUpdateScoresAeJaponicusErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsUpdateScoresAeJaponicusErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsUpdateScoresAeKoreicusErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsUpdateScoresAeKoreicusErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsUpdateScoresAeKoreicusErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsUpdateScoresCulexErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsUpdateScoresCulexErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsUpdateScoresCulexErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsUpdateScoresAnophelesErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsUpdateScoresAnophelesErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsUpdateScoresAnophelesErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsUpdateScoresCulisetaErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsUpdateScoresCulisetaErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsUpdateScoresCulisetaErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsUpdateScoresOtherSpeciesErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsUpdateScoresOtherSpeciesErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsUpdateScoresOtherSpeciesErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsUpdateScoresNotSureErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsUpdateScoresNotSureErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsUpdateScoresNotSureErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksPredictionsUpdateClassifierVersionErrorComponent
        if not isinstance(v, IdentificationtasksPredictionsUpdateClassifierVersionErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksPredictionsUpdateClassifierVersionErrorComponent`")
        else:
            match += 1
        if match > 1:
            # more than 1 match
            raise ValueError("Multiple matches found when setting `actual_instance` in IdentificationtasksPredictionsUpdateError with oneOf schemas: IdentificationtasksPredictionsUpdateBboxNonFieldErrorsErrorComponent, IdentificationtasksPredictionsUpdateBboxXMaxErrorComponent, IdentificationtasksPredictionsUpdateBboxXMinErrorComponent, IdentificationtasksPredictionsUpdateBboxYMaxErrorComponent, IdentificationtasksPredictionsUpdateBboxYMinErrorComponent, IdentificationtasksPredictionsUpdateClassifierVersionErrorComponent, IdentificationtasksPredictionsUpdateInsectConfidenceErrorComponent, IdentificationtasksPredictionsUpdateIsDecisiveErrorComponent, IdentificationtasksPredictionsUpdateNonFieldErrorsErrorComponent, IdentificationtasksPredictionsUpdatePredictedClassErrorComponent, IdentificationtasksPredictionsUpdateScoresAeAegyptiErrorComponent, IdentificationtasksPredictionsUpdateScoresAeAlbopictusErrorComponent, IdentificationtasksPredictionsUpdateScoresAeJaponicusErrorComponent, IdentificationtasksPredictionsUpdateScoresAeKoreicusErrorComponent, IdentificationtasksPredictionsUpdateScoresAnophelesErrorComponent, IdentificationtasksPredictionsUpdateScoresCulexErrorComponent, IdentificationtasksPredictionsUpdateScoresCulisetaErrorComponent, IdentificationtasksPredictionsUpdateScoresNonFieldErrorsErrorComponent, IdentificationtasksPredictionsUpdateScoresNotSureErrorComponent, IdentificationtasksPredictionsUpdateScoresOtherSpeciesErrorComponent, IdentificationtasksPredictionsUpdateThresholdDeviationErrorComponent. Details: " + ", ".join(error_messages))
        elif match == 0:
            # no match
            raise ValueError("No match found when setting `actual_instance` in IdentificationtasksPredictionsUpdateError with oneOf schemas: IdentificationtasksPredictionsUpdateBboxNonFieldErrorsErrorComponent, IdentificationtasksPredictionsUpdateBboxXMaxErrorComponent, IdentificationtasksPredictionsUpdateBboxXMinErrorComponent, IdentificationtasksPredictionsUpdateBboxYMaxErrorComponent, IdentificationtasksPredictionsUpdateBboxYMinErrorComponent, IdentificationtasksPredictionsUpdateClassifierVersionErrorComponent, IdentificationtasksPredictionsUpdateInsectConfidenceErrorComponent, IdentificationtasksPredictionsUpdateIsDecisiveErrorComponent, IdentificationtasksPredictionsUpdateNonFieldErrorsErrorComponent, IdentificationtasksPredictionsUpdatePredictedClassErrorComponent, IdentificationtasksPredictionsUpdateScoresAeAegyptiErrorComponent, IdentificationtasksPredictionsUpdateScoresAeAlbopictusErrorComponent, IdentificationtasksPredictionsUpdateScoresAeJaponicusErrorComponent, IdentificationtasksPredictionsUpdateScoresAeKoreicusErrorComponent, IdentificationtasksPredictionsUpdateScoresAnophelesErrorComponent, IdentificationtasksPredictionsUpdateScoresCulexErrorComponent, IdentificationtasksPredictionsUpdateScoresCulisetaErrorComponent, IdentificationtasksPredictionsUpdateScoresNonFieldErrorsErrorComponent, IdentificationtasksPredictionsUpdateScoresNotSureErrorComponent, IdentificationtasksPredictionsUpdateScoresOtherSpeciesErrorComponent, IdentificationtasksPredictionsUpdateThresholdDeviationErrorComponent. Details: " + ", ".join(error_messages))
        else:
            return v

    @classmethod
    def from_dict(cls, obj: Union[str, Dict[str, Any]]) -> Self:
        return cls.from_json(json.dumps(obj))

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Returns the object represented by the json string"""
        instance = cls.model_construct()
        error_messages = []
        match = 0

        # deserialize data into IdentificationtasksPredictionsUpdateNonFieldErrorsErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsUpdateNonFieldErrorsErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsUpdateBboxNonFieldErrorsErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsUpdateBboxNonFieldErrorsErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsUpdateBboxXMinErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsUpdateBboxXMinErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsUpdateBboxYMinErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsUpdateBboxYMinErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsUpdateBboxXMaxErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsUpdateBboxXMaxErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsUpdateBboxYMaxErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsUpdateBboxYMaxErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsUpdateInsectConfidenceErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsUpdateInsectConfidenceErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsUpdatePredictedClassErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsUpdatePredictedClassErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsUpdateThresholdDeviationErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsUpdateThresholdDeviationErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsUpdateIsDecisiveErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsUpdateIsDecisiveErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsUpdateScoresNonFieldErrorsErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsUpdateScoresNonFieldErrorsErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsUpdateScoresAeAlbopictusErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsUpdateScoresAeAlbopictusErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsUpdateScoresAeAegyptiErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsUpdateScoresAeAegyptiErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsUpdateScoresAeJaponicusErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsUpdateScoresAeJaponicusErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsUpdateScoresAeKoreicusErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsUpdateScoresAeKoreicusErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsUpdateScoresCulexErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsUpdateScoresCulexErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsUpdateScoresAnophelesErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsUpdateScoresAnophelesErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsUpdateScoresCulisetaErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsUpdateScoresCulisetaErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsUpdateScoresOtherSpeciesErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsUpdateScoresOtherSpeciesErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsUpdateScoresNotSureErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsUpdateScoresNotSureErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksPredictionsUpdateClassifierVersionErrorComponent
        try:
            instance.actual_instance = IdentificationtasksPredictionsUpdateClassifierVersionErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))

        if match > 1:
            # more than 1 match
            raise ValueError("Multiple matches found when deserializing the JSON string into IdentificationtasksPredictionsUpdateError with oneOf schemas: IdentificationtasksPredictionsUpdateBboxNonFieldErrorsErrorComponent, IdentificationtasksPredictionsUpdateBboxXMaxErrorComponent, IdentificationtasksPredictionsUpdateBboxXMinErrorComponent, IdentificationtasksPredictionsUpdateBboxYMaxErrorComponent, IdentificationtasksPredictionsUpdateBboxYMinErrorComponent, IdentificationtasksPredictionsUpdateClassifierVersionErrorComponent, IdentificationtasksPredictionsUpdateInsectConfidenceErrorComponent, IdentificationtasksPredictionsUpdateIsDecisiveErrorComponent, IdentificationtasksPredictionsUpdateNonFieldErrorsErrorComponent, IdentificationtasksPredictionsUpdatePredictedClassErrorComponent, IdentificationtasksPredictionsUpdateScoresAeAegyptiErrorComponent, IdentificationtasksPredictionsUpdateScoresAeAlbopictusErrorComponent, IdentificationtasksPredictionsUpdateScoresAeJaponicusErrorComponent, IdentificationtasksPredictionsUpdateScoresAeKoreicusErrorComponent, IdentificationtasksPredictionsUpdateScoresAnophelesErrorComponent, IdentificationtasksPredictionsUpdateScoresCulexErrorComponent, IdentificationtasksPredictionsUpdateScoresCulisetaErrorComponent, IdentificationtasksPredictionsUpdateScoresNonFieldErrorsErrorComponent, IdentificationtasksPredictionsUpdateScoresNotSureErrorComponent, IdentificationtasksPredictionsUpdateScoresOtherSpeciesErrorComponent, IdentificationtasksPredictionsUpdateThresholdDeviationErrorComponent. Details: " + ", ".join(error_messages))
        elif match == 0:
            # no match
            raise ValueError("No match found when deserializing the JSON string into IdentificationtasksPredictionsUpdateError with oneOf schemas: IdentificationtasksPredictionsUpdateBboxNonFieldErrorsErrorComponent, IdentificationtasksPredictionsUpdateBboxXMaxErrorComponent, IdentificationtasksPredictionsUpdateBboxXMinErrorComponent, IdentificationtasksPredictionsUpdateBboxYMaxErrorComponent, IdentificationtasksPredictionsUpdateBboxYMinErrorComponent, IdentificationtasksPredictionsUpdateClassifierVersionErrorComponent, IdentificationtasksPredictionsUpdateInsectConfidenceErrorComponent, IdentificationtasksPredictionsUpdateIsDecisiveErrorComponent, IdentificationtasksPredictionsUpdateNonFieldErrorsErrorComponent, IdentificationtasksPredictionsUpdatePredictedClassErrorComponent, IdentificationtasksPredictionsUpdateScoresAeAegyptiErrorComponent, IdentificationtasksPredictionsUpdateScoresAeAlbopictusErrorComponent, IdentificationtasksPredictionsUpdateScoresAeJaponicusErrorComponent, IdentificationtasksPredictionsUpdateScoresAeKoreicusErrorComponent, IdentificationtasksPredictionsUpdateScoresAnophelesErrorComponent, IdentificationtasksPredictionsUpdateScoresCulexErrorComponent, IdentificationtasksPredictionsUpdateScoresCulisetaErrorComponent, IdentificationtasksPredictionsUpdateScoresNonFieldErrorsErrorComponent, IdentificationtasksPredictionsUpdateScoresNotSureErrorComponent, IdentificationtasksPredictionsUpdateScoresOtherSpeciesErrorComponent, IdentificationtasksPredictionsUpdateThresholdDeviationErrorComponent. Details: " + ", ".join(error_messages))
        else:
            return instance

    def to_json(self) -> str:
        """Returns the JSON representation of the actual instance"""
        if self.actual_instance is None:
            return "null"

        if hasattr(self.actual_instance, "to_json") and callable(self.actual_instance.to_json):
            return self.actual_instance.to_json()
        else:
            return json.dumps(self.actual_instance)

    def to_dict(self) -> Optional[Union[Dict[str, Any], IdentificationtasksPredictionsUpdateBboxNonFieldErrorsErrorComponent, IdentificationtasksPredictionsUpdateBboxXMaxErrorComponent, IdentificationtasksPredictionsUpdateBboxXMinErrorComponent, IdentificationtasksPredictionsUpdateBboxYMaxErrorComponent, IdentificationtasksPredictionsUpdateBboxYMinErrorComponent, IdentificationtasksPredictionsUpdateClassifierVersionErrorComponent, IdentificationtasksPredictionsUpdateInsectConfidenceErrorComponent, IdentificationtasksPredictionsUpdateIsDecisiveErrorComponent, IdentificationtasksPredictionsUpdateNonFieldErrorsErrorComponent, IdentificationtasksPredictionsUpdatePredictedClassErrorComponent, IdentificationtasksPredictionsUpdateScoresAeAegyptiErrorComponent, IdentificationtasksPredictionsUpdateScoresAeAlbopictusErrorComponent, IdentificationtasksPredictionsUpdateScoresAeJaponicusErrorComponent, IdentificationtasksPredictionsUpdateScoresAeKoreicusErrorComponent, IdentificationtasksPredictionsUpdateScoresAnophelesErrorComponent, IdentificationtasksPredictionsUpdateScoresCulexErrorComponent, IdentificationtasksPredictionsUpdateScoresCulisetaErrorComponent, IdentificationtasksPredictionsUpdateScoresNonFieldErrorsErrorComponent, IdentificationtasksPredictionsUpdateScoresNotSureErrorComponent, IdentificationtasksPredictionsUpdateScoresOtherSpeciesErrorComponent, IdentificationtasksPredictionsUpdateThresholdDeviationErrorComponent]]:
        """Returns the dict representation of the actual instance"""
        if self.actual_instance is None:
            return None

        if hasattr(self.actual_instance, "to_dict") and callable(self.actual_instance.to_dict):
            return self.actual_instance.to_dict()
        else:
            # primitive type
            return self.actual_instance

    def to_str(self) -> str:
        """Returns the string representation of the actual instance"""
        return pprint.pformat(self.model_dump())


