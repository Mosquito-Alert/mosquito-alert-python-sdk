# coding: utf-8

"""
    Mosquito Alert API

    Introducing API v1 for Mosquito Alert platform, a project desgined to facilitate citizen science initiatives and enable collaboration among scientists, public health officials, and environmental managers in the investigation and control of disease-carrying mosquitoes.

    The version of the OpenAPI document: v1
    Contact: it@mosquitoalert.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
import pprint
from pydantic import BaseModel, ConfigDict, Field, StrictStr, ValidationError, field_validator
from typing import Any, List, Optional
from mosquito_alert.models.identificationtasks_annotations_create_best_photo_uuid_error_component import IdentificationtasksAnnotationsCreateBestPhotoUuidErrorComponent
from mosquito_alert.models.identificationtasks_annotations_create_characteristics_is_blood_fed_error_component import IdentificationtasksAnnotationsCreateCharacteristicsIsBloodFedErrorComponent
from mosquito_alert.models.identificationtasks_annotations_create_characteristics_is_gravid_error_component import IdentificationtasksAnnotationsCreateCharacteristicsIsGravidErrorComponent
from mosquito_alert.models.identificationtasks_annotations_create_characteristics_non_field_errors_error_component import IdentificationtasksAnnotationsCreateCharacteristicsNonFieldErrorsErrorComponent
from mosquito_alert.models.identificationtasks_annotations_create_characteristics_sex_error_component import IdentificationtasksAnnotationsCreateCharacteristicsSexErrorComponent
from mosquito_alert.models.identificationtasks_annotations_create_classification_confidence_label_error_component import IdentificationtasksAnnotationsCreateClassificationConfidenceLabelErrorComponent
from mosquito_alert.models.identificationtasks_annotations_create_classification_non_field_errors_error_component import IdentificationtasksAnnotationsCreateClassificationNonFieldErrorsErrorComponent
from mosquito_alert.models.identificationtasks_annotations_create_classification_taxon_id_error_component import IdentificationtasksAnnotationsCreateClassificationTaxonIdErrorComponent
from mosquito_alert.models.identificationtasks_annotations_create_feedback_internal_note_error_component import IdentificationtasksAnnotationsCreateFeedbackInternalNoteErrorComponent
from mosquito_alert.models.identificationtasks_annotations_create_feedback_non_field_errors_error_component import IdentificationtasksAnnotationsCreateFeedbackNonFieldErrorsErrorComponent
from mosquito_alert.models.identificationtasks_annotations_create_feedback_public_note_error_component import IdentificationtasksAnnotationsCreateFeedbackPublicNoteErrorComponent
from mosquito_alert.models.identificationtasks_annotations_create_feedback_user_note_error_component import IdentificationtasksAnnotationsCreateFeedbackUserNoteErrorComponent
from mosquito_alert.models.identificationtasks_annotations_create_is_decisive_error_component import IdentificationtasksAnnotationsCreateIsDecisiveErrorComponent
from mosquito_alert.models.identificationtasks_annotations_create_is_flagged_error_component import IdentificationtasksAnnotationsCreateIsFlaggedErrorComponent
from mosquito_alert.models.identificationtasks_annotations_create_non_field_errors_error_component import IdentificationtasksAnnotationsCreateNonFieldErrorsErrorComponent
from mosquito_alert.models.identificationtasks_annotations_create_observation_flags_is_favourite_error_component import IdentificationtasksAnnotationsCreateObservationFlagsIsFavouriteErrorComponent
from mosquito_alert.models.identificationtasks_annotations_create_observation_flags_is_visible_error_component import IdentificationtasksAnnotationsCreateObservationFlagsIsVisibleErrorComponent
from mosquito_alert.models.identificationtasks_annotations_create_observation_flags_non_field_errors_error_component import IdentificationtasksAnnotationsCreateObservationFlagsNonFieldErrorsErrorComponent
from mosquito_alert.models.identificationtasks_annotations_create_tags_error_component import IdentificationtasksAnnotationsCreateTagsErrorComponent
from mosquito_alert.models.identificationtasks_annotations_create_tags_index_error_component import IdentificationtasksAnnotationsCreateTagsINDEXErrorComponent
from pydantic import StrictStr, Field
from typing import Union, List, Set, Optional, Dict
from typing_extensions import Literal, Self

IDENTIFICATIONTASKSANNOTATIONSCREATEERROR_ONE_OF_SCHEMAS = ["IdentificationtasksAnnotationsCreateBestPhotoUuidErrorComponent", "IdentificationtasksAnnotationsCreateCharacteristicsIsBloodFedErrorComponent", "IdentificationtasksAnnotationsCreateCharacteristicsIsGravidErrorComponent", "IdentificationtasksAnnotationsCreateCharacteristicsNonFieldErrorsErrorComponent", "IdentificationtasksAnnotationsCreateCharacteristicsSexErrorComponent", "IdentificationtasksAnnotationsCreateClassificationConfidenceLabelErrorComponent", "IdentificationtasksAnnotationsCreateClassificationNonFieldErrorsErrorComponent", "IdentificationtasksAnnotationsCreateClassificationTaxonIdErrorComponent", "IdentificationtasksAnnotationsCreateFeedbackInternalNoteErrorComponent", "IdentificationtasksAnnotationsCreateFeedbackNonFieldErrorsErrorComponent", "IdentificationtasksAnnotationsCreateFeedbackPublicNoteErrorComponent", "IdentificationtasksAnnotationsCreateFeedbackUserNoteErrorComponent", "IdentificationtasksAnnotationsCreateIsDecisiveErrorComponent", "IdentificationtasksAnnotationsCreateIsFlaggedErrorComponent", "IdentificationtasksAnnotationsCreateNonFieldErrorsErrorComponent", "IdentificationtasksAnnotationsCreateObservationFlagsIsFavouriteErrorComponent", "IdentificationtasksAnnotationsCreateObservationFlagsIsVisibleErrorComponent", "IdentificationtasksAnnotationsCreateObservationFlagsNonFieldErrorsErrorComponent", "IdentificationtasksAnnotationsCreateTagsErrorComponent", "IdentificationtasksAnnotationsCreateTagsINDEXErrorComponent"]

class IdentificationtasksAnnotationsCreateError(BaseModel):
    """
    IdentificationtasksAnnotationsCreateError
    """
    # data type: IdentificationtasksAnnotationsCreateNonFieldErrorsErrorComponent
    oneof_schema_1_validator: Optional[IdentificationtasksAnnotationsCreateNonFieldErrorsErrorComponent] = None
    # data type: IdentificationtasksAnnotationsCreateBestPhotoUuidErrorComponent
    oneof_schema_2_validator: Optional[IdentificationtasksAnnotationsCreateBestPhotoUuidErrorComponent] = None
    # data type: IdentificationtasksAnnotationsCreateClassificationNonFieldErrorsErrorComponent
    oneof_schema_3_validator: Optional[IdentificationtasksAnnotationsCreateClassificationNonFieldErrorsErrorComponent] = None
    # data type: IdentificationtasksAnnotationsCreateClassificationTaxonIdErrorComponent
    oneof_schema_4_validator: Optional[IdentificationtasksAnnotationsCreateClassificationTaxonIdErrorComponent] = None
    # data type: IdentificationtasksAnnotationsCreateClassificationConfidenceLabelErrorComponent
    oneof_schema_5_validator: Optional[IdentificationtasksAnnotationsCreateClassificationConfidenceLabelErrorComponent] = None
    # data type: IdentificationtasksAnnotationsCreateCharacteristicsNonFieldErrorsErrorComponent
    oneof_schema_6_validator: Optional[IdentificationtasksAnnotationsCreateCharacteristicsNonFieldErrorsErrorComponent] = None
    # data type: IdentificationtasksAnnotationsCreateCharacteristicsSexErrorComponent
    oneof_schema_7_validator: Optional[IdentificationtasksAnnotationsCreateCharacteristicsSexErrorComponent] = None
    # data type: IdentificationtasksAnnotationsCreateCharacteristicsIsBloodFedErrorComponent
    oneof_schema_8_validator: Optional[IdentificationtasksAnnotationsCreateCharacteristicsIsBloodFedErrorComponent] = None
    # data type: IdentificationtasksAnnotationsCreateCharacteristicsIsGravidErrorComponent
    oneof_schema_9_validator: Optional[IdentificationtasksAnnotationsCreateCharacteristicsIsGravidErrorComponent] = None
    # data type: IdentificationtasksAnnotationsCreateFeedbackNonFieldErrorsErrorComponent
    oneof_schema_10_validator: Optional[IdentificationtasksAnnotationsCreateFeedbackNonFieldErrorsErrorComponent] = None
    # data type: IdentificationtasksAnnotationsCreateFeedbackPublicNoteErrorComponent
    oneof_schema_11_validator: Optional[IdentificationtasksAnnotationsCreateFeedbackPublicNoteErrorComponent] = None
    # data type: IdentificationtasksAnnotationsCreateFeedbackInternalNoteErrorComponent
    oneof_schema_12_validator: Optional[IdentificationtasksAnnotationsCreateFeedbackInternalNoteErrorComponent] = None
    # data type: IdentificationtasksAnnotationsCreateFeedbackUserNoteErrorComponent
    oneof_schema_13_validator: Optional[IdentificationtasksAnnotationsCreateFeedbackUserNoteErrorComponent] = None
    # data type: IdentificationtasksAnnotationsCreateIsFlaggedErrorComponent
    oneof_schema_14_validator: Optional[IdentificationtasksAnnotationsCreateIsFlaggedErrorComponent] = None
    # data type: IdentificationtasksAnnotationsCreateIsDecisiveErrorComponent
    oneof_schema_15_validator: Optional[IdentificationtasksAnnotationsCreateIsDecisiveErrorComponent] = None
    # data type: IdentificationtasksAnnotationsCreateObservationFlagsNonFieldErrorsErrorComponent
    oneof_schema_16_validator: Optional[IdentificationtasksAnnotationsCreateObservationFlagsNonFieldErrorsErrorComponent] = None
    # data type: IdentificationtasksAnnotationsCreateObservationFlagsIsFavouriteErrorComponent
    oneof_schema_17_validator: Optional[IdentificationtasksAnnotationsCreateObservationFlagsIsFavouriteErrorComponent] = None
    # data type: IdentificationtasksAnnotationsCreateObservationFlagsIsVisibleErrorComponent
    oneof_schema_18_validator: Optional[IdentificationtasksAnnotationsCreateObservationFlagsIsVisibleErrorComponent] = None
    # data type: IdentificationtasksAnnotationsCreateTagsErrorComponent
    oneof_schema_19_validator: Optional[IdentificationtasksAnnotationsCreateTagsErrorComponent] = None
    # data type: IdentificationtasksAnnotationsCreateTagsINDEXErrorComponent
    oneof_schema_20_validator: Optional[IdentificationtasksAnnotationsCreateTagsINDEXErrorComponent] = None
    actual_instance: Optional[Union[IdentificationtasksAnnotationsCreateBestPhotoUuidErrorComponent, IdentificationtasksAnnotationsCreateCharacteristicsIsBloodFedErrorComponent, IdentificationtasksAnnotationsCreateCharacteristicsIsGravidErrorComponent, IdentificationtasksAnnotationsCreateCharacteristicsNonFieldErrorsErrorComponent, IdentificationtasksAnnotationsCreateCharacteristicsSexErrorComponent, IdentificationtasksAnnotationsCreateClassificationConfidenceLabelErrorComponent, IdentificationtasksAnnotationsCreateClassificationNonFieldErrorsErrorComponent, IdentificationtasksAnnotationsCreateClassificationTaxonIdErrorComponent, IdentificationtasksAnnotationsCreateFeedbackInternalNoteErrorComponent, IdentificationtasksAnnotationsCreateFeedbackNonFieldErrorsErrorComponent, IdentificationtasksAnnotationsCreateFeedbackPublicNoteErrorComponent, IdentificationtasksAnnotationsCreateFeedbackUserNoteErrorComponent, IdentificationtasksAnnotationsCreateIsDecisiveErrorComponent, IdentificationtasksAnnotationsCreateIsFlaggedErrorComponent, IdentificationtasksAnnotationsCreateNonFieldErrorsErrorComponent, IdentificationtasksAnnotationsCreateObservationFlagsIsFavouriteErrorComponent, IdentificationtasksAnnotationsCreateObservationFlagsIsVisibleErrorComponent, IdentificationtasksAnnotationsCreateObservationFlagsNonFieldErrorsErrorComponent, IdentificationtasksAnnotationsCreateTagsErrorComponent, IdentificationtasksAnnotationsCreateTagsINDEXErrorComponent]] = None
    one_of_schemas: Set[str] = { "IdentificationtasksAnnotationsCreateBestPhotoUuidErrorComponent", "IdentificationtasksAnnotationsCreateCharacteristicsIsBloodFedErrorComponent", "IdentificationtasksAnnotationsCreateCharacteristicsIsGravidErrorComponent", "IdentificationtasksAnnotationsCreateCharacteristicsNonFieldErrorsErrorComponent", "IdentificationtasksAnnotationsCreateCharacteristicsSexErrorComponent", "IdentificationtasksAnnotationsCreateClassificationConfidenceLabelErrorComponent", "IdentificationtasksAnnotationsCreateClassificationNonFieldErrorsErrorComponent", "IdentificationtasksAnnotationsCreateClassificationTaxonIdErrorComponent", "IdentificationtasksAnnotationsCreateFeedbackInternalNoteErrorComponent", "IdentificationtasksAnnotationsCreateFeedbackNonFieldErrorsErrorComponent", "IdentificationtasksAnnotationsCreateFeedbackPublicNoteErrorComponent", "IdentificationtasksAnnotationsCreateFeedbackUserNoteErrorComponent", "IdentificationtasksAnnotationsCreateIsDecisiveErrorComponent", "IdentificationtasksAnnotationsCreateIsFlaggedErrorComponent", "IdentificationtasksAnnotationsCreateNonFieldErrorsErrorComponent", "IdentificationtasksAnnotationsCreateObservationFlagsIsFavouriteErrorComponent", "IdentificationtasksAnnotationsCreateObservationFlagsIsVisibleErrorComponent", "IdentificationtasksAnnotationsCreateObservationFlagsNonFieldErrorsErrorComponent", "IdentificationtasksAnnotationsCreateTagsErrorComponent", "IdentificationtasksAnnotationsCreateTagsINDEXErrorComponent" }

    model_config = ConfigDict(
        validate_assignment=True,
        protected_namespaces=(),
    )


    discriminator_value_class_map: Dict[str, str] = {
    }

    def __init__(self, *args, **kwargs) -> None:
        if args:
            if len(args) > 1:
                raise ValueError("If a position argument is used, only 1 is allowed to set `actual_instance`")
            if kwargs:
                raise ValueError("If a position argument is used, keyword arguments cannot be used.")
            super().__init__(actual_instance=args[0])
        else:
            super().__init__(**kwargs)

    @field_validator('actual_instance')
    def actual_instance_must_validate_oneof(cls, v):
        instance = IdentificationtasksAnnotationsCreateError.model_construct()
        error_messages = []
        match = 0
        # validate data type: IdentificationtasksAnnotationsCreateNonFieldErrorsErrorComponent
        if not isinstance(v, IdentificationtasksAnnotationsCreateNonFieldErrorsErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksAnnotationsCreateNonFieldErrorsErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksAnnotationsCreateBestPhotoUuidErrorComponent
        if not isinstance(v, IdentificationtasksAnnotationsCreateBestPhotoUuidErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksAnnotationsCreateBestPhotoUuidErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksAnnotationsCreateClassificationNonFieldErrorsErrorComponent
        if not isinstance(v, IdentificationtasksAnnotationsCreateClassificationNonFieldErrorsErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksAnnotationsCreateClassificationNonFieldErrorsErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksAnnotationsCreateClassificationTaxonIdErrorComponent
        if not isinstance(v, IdentificationtasksAnnotationsCreateClassificationTaxonIdErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksAnnotationsCreateClassificationTaxonIdErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksAnnotationsCreateClassificationConfidenceLabelErrorComponent
        if not isinstance(v, IdentificationtasksAnnotationsCreateClassificationConfidenceLabelErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksAnnotationsCreateClassificationConfidenceLabelErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksAnnotationsCreateCharacteristicsNonFieldErrorsErrorComponent
        if not isinstance(v, IdentificationtasksAnnotationsCreateCharacteristicsNonFieldErrorsErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksAnnotationsCreateCharacteristicsNonFieldErrorsErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksAnnotationsCreateCharacteristicsSexErrorComponent
        if not isinstance(v, IdentificationtasksAnnotationsCreateCharacteristicsSexErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksAnnotationsCreateCharacteristicsSexErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksAnnotationsCreateCharacteristicsIsBloodFedErrorComponent
        if not isinstance(v, IdentificationtasksAnnotationsCreateCharacteristicsIsBloodFedErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksAnnotationsCreateCharacteristicsIsBloodFedErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksAnnotationsCreateCharacteristicsIsGravidErrorComponent
        if not isinstance(v, IdentificationtasksAnnotationsCreateCharacteristicsIsGravidErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksAnnotationsCreateCharacteristicsIsGravidErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksAnnotationsCreateFeedbackNonFieldErrorsErrorComponent
        if not isinstance(v, IdentificationtasksAnnotationsCreateFeedbackNonFieldErrorsErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksAnnotationsCreateFeedbackNonFieldErrorsErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksAnnotationsCreateFeedbackPublicNoteErrorComponent
        if not isinstance(v, IdentificationtasksAnnotationsCreateFeedbackPublicNoteErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksAnnotationsCreateFeedbackPublicNoteErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksAnnotationsCreateFeedbackInternalNoteErrorComponent
        if not isinstance(v, IdentificationtasksAnnotationsCreateFeedbackInternalNoteErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksAnnotationsCreateFeedbackInternalNoteErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksAnnotationsCreateFeedbackUserNoteErrorComponent
        if not isinstance(v, IdentificationtasksAnnotationsCreateFeedbackUserNoteErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksAnnotationsCreateFeedbackUserNoteErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksAnnotationsCreateIsFlaggedErrorComponent
        if not isinstance(v, IdentificationtasksAnnotationsCreateIsFlaggedErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksAnnotationsCreateIsFlaggedErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksAnnotationsCreateIsDecisiveErrorComponent
        if not isinstance(v, IdentificationtasksAnnotationsCreateIsDecisiveErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksAnnotationsCreateIsDecisiveErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksAnnotationsCreateObservationFlagsNonFieldErrorsErrorComponent
        if not isinstance(v, IdentificationtasksAnnotationsCreateObservationFlagsNonFieldErrorsErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksAnnotationsCreateObservationFlagsNonFieldErrorsErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksAnnotationsCreateObservationFlagsIsFavouriteErrorComponent
        if not isinstance(v, IdentificationtasksAnnotationsCreateObservationFlagsIsFavouriteErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksAnnotationsCreateObservationFlagsIsFavouriteErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksAnnotationsCreateObservationFlagsIsVisibleErrorComponent
        if not isinstance(v, IdentificationtasksAnnotationsCreateObservationFlagsIsVisibleErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksAnnotationsCreateObservationFlagsIsVisibleErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksAnnotationsCreateTagsErrorComponent
        if not isinstance(v, IdentificationtasksAnnotationsCreateTagsErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksAnnotationsCreateTagsErrorComponent`")
        else:
            match += 1
        # validate data type: IdentificationtasksAnnotationsCreateTagsINDEXErrorComponent
        if not isinstance(v, IdentificationtasksAnnotationsCreateTagsINDEXErrorComponent):
            error_messages.append(f"Error! Input type `{type(v)}` is not `IdentificationtasksAnnotationsCreateTagsINDEXErrorComponent`")
        else:
            match += 1
        if match > 1:
            # more than 1 match
            raise ValueError("Multiple matches found when setting `actual_instance` in IdentificationtasksAnnotationsCreateError with oneOf schemas: IdentificationtasksAnnotationsCreateBestPhotoUuidErrorComponent, IdentificationtasksAnnotationsCreateCharacteristicsIsBloodFedErrorComponent, IdentificationtasksAnnotationsCreateCharacteristicsIsGravidErrorComponent, IdentificationtasksAnnotationsCreateCharacteristicsNonFieldErrorsErrorComponent, IdentificationtasksAnnotationsCreateCharacteristicsSexErrorComponent, IdentificationtasksAnnotationsCreateClassificationConfidenceLabelErrorComponent, IdentificationtasksAnnotationsCreateClassificationNonFieldErrorsErrorComponent, IdentificationtasksAnnotationsCreateClassificationTaxonIdErrorComponent, IdentificationtasksAnnotationsCreateFeedbackInternalNoteErrorComponent, IdentificationtasksAnnotationsCreateFeedbackNonFieldErrorsErrorComponent, IdentificationtasksAnnotationsCreateFeedbackPublicNoteErrorComponent, IdentificationtasksAnnotationsCreateFeedbackUserNoteErrorComponent, IdentificationtasksAnnotationsCreateIsDecisiveErrorComponent, IdentificationtasksAnnotationsCreateIsFlaggedErrorComponent, IdentificationtasksAnnotationsCreateNonFieldErrorsErrorComponent, IdentificationtasksAnnotationsCreateObservationFlagsIsFavouriteErrorComponent, IdentificationtasksAnnotationsCreateObservationFlagsIsVisibleErrorComponent, IdentificationtasksAnnotationsCreateObservationFlagsNonFieldErrorsErrorComponent, IdentificationtasksAnnotationsCreateTagsErrorComponent, IdentificationtasksAnnotationsCreateTagsINDEXErrorComponent. Details: " + ", ".join(error_messages))
        elif match == 0:
            # no match
            raise ValueError("No match found when setting `actual_instance` in IdentificationtasksAnnotationsCreateError with oneOf schemas: IdentificationtasksAnnotationsCreateBestPhotoUuidErrorComponent, IdentificationtasksAnnotationsCreateCharacteristicsIsBloodFedErrorComponent, IdentificationtasksAnnotationsCreateCharacteristicsIsGravidErrorComponent, IdentificationtasksAnnotationsCreateCharacteristicsNonFieldErrorsErrorComponent, IdentificationtasksAnnotationsCreateCharacteristicsSexErrorComponent, IdentificationtasksAnnotationsCreateClassificationConfidenceLabelErrorComponent, IdentificationtasksAnnotationsCreateClassificationNonFieldErrorsErrorComponent, IdentificationtasksAnnotationsCreateClassificationTaxonIdErrorComponent, IdentificationtasksAnnotationsCreateFeedbackInternalNoteErrorComponent, IdentificationtasksAnnotationsCreateFeedbackNonFieldErrorsErrorComponent, IdentificationtasksAnnotationsCreateFeedbackPublicNoteErrorComponent, IdentificationtasksAnnotationsCreateFeedbackUserNoteErrorComponent, IdentificationtasksAnnotationsCreateIsDecisiveErrorComponent, IdentificationtasksAnnotationsCreateIsFlaggedErrorComponent, IdentificationtasksAnnotationsCreateNonFieldErrorsErrorComponent, IdentificationtasksAnnotationsCreateObservationFlagsIsFavouriteErrorComponent, IdentificationtasksAnnotationsCreateObservationFlagsIsVisibleErrorComponent, IdentificationtasksAnnotationsCreateObservationFlagsNonFieldErrorsErrorComponent, IdentificationtasksAnnotationsCreateTagsErrorComponent, IdentificationtasksAnnotationsCreateTagsINDEXErrorComponent. Details: " + ", ".join(error_messages))
        else:
            return v

    @classmethod
    def from_dict(cls, obj: Union[str, Dict[str, Any]]) -> Self:
        return cls.from_json(json.dumps(obj))

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Returns the object represented by the json string"""
        instance = cls.model_construct()
        error_messages = []
        match = 0

        # deserialize data into IdentificationtasksAnnotationsCreateNonFieldErrorsErrorComponent
        try:
            instance.actual_instance = IdentificationtasksAnnotationsCreateNonFieldErrorsErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksAnnotationsCreateBestPhotoUuidErrorComponent
        try:
            instance.actual_instance = IdentificationtasksAnnotationsCreateBestPhotoUuidErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksAnnotationsCreateClassificationNonFieldErrorsErrorComponent
        try:
            instance.actual_instance = IdentificationtasksAnnotationsCreateClassificationNonFieldErrorsErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksAnnotationsCreateClassificationTaxonIdErrorComponent
        try:
            instance.actual_instance = IdentificationtasksAnnotationsCreateClassificationTaxonIdErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksAnnotationsCreateClassificationConfidenceLabelErrorComponent
        try:
            instance.actual_instance = IdentificationtasksAnnotationsCreateClassificationConfidenceLabelErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksAnnotationsCreateCharacteristicsNonFieldErrorsErrorComponent
        try:
            instance.actual_instance = IdentificationtasksAnnotationsCreateCharacteristicsNonFieldErrorsErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksAnnotationsCreateCharacteristicsSexErrorComponent
        try:
            instance.actual_instance = IdentificationtasksAnnotationsCreateCharacteristicsSexErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksAnnotationsCreateCharacteristicsIsBloodFedErrorComponent
        try:
            instance.actual_instance = IdentificationtasksAnnotationsCreateCharacteristicsIsBloodFedErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksAnnotationsCreateCharacteristicsIsGravidErrorComponent
        try:
            instance.actual_instance = IdentificationtasksAnnotationsCreateCharacteristicsIsGravidErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksAnnotationsCreateFeedbackNonFieldErrorsErrorComponent
        try:
            instance.actual_instance = IdentificationtasksAnnotationsCreateFeedbackNonFieldErrorsErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksAnnotationsCreateFeedbackPublicNoteErrorComponent
        try:
            instance.actual_instance = IdentificationtasksAnnotationsCreateFeedbackPublicNoteErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksAnnotationsCreateFeedbackInternalNoteErrorComponent
        try:
            instance.actual_instance = IdentificationtasksAnnotationsCreateFeedbackInternalNoteErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksAnnotationsCreateFeedbackUserNoteErrorComponent
        try:
            instance.actual_instance = IdentificationtasksAnnotationsCreateFeedbackUserNoteErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksAnnotationsCreateIsFlaggedErrorComponent
        try:
            instance.actual_instance = IdentificationtasksAnnotationsCreateIsFlaggedErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksAnnotationsCreateIsDecisiveErrorComponent
        try:
            instance.actual_instance = IdentificationtasksAnnotationsCreateIsDecisiveErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksAnnotationsCreateObservationFlagsNonFieldErrorsErrorComponent
        try:
            instance.actual_instance = IdentificationtasksAnnotationsCreateObservationFlagsNonFieldErrorsErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksAnnotationsCreateObservationFlagsIsFavouriteErrorComponent
        try:
            instance.actual_instance = IdentificationtasksAnnotationsCreateObservationFlagsIsFavouriteErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksAnnotationsCreateObservationFlagsIsVisibleErrorComponent
        try:
            instance.actual_instance = IdentificationtasksAnnotationsCreateObservationFlagsIsVisibleErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksAnnotationsCreateTagsErrorComponent
        try:
            instance.actual_instance = IdentificationtasksAnnotationsCreateTagsErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into IdentificationtasksAnnotationsCreateTagsINDEXErrorComponent
        try:
            instance.actual_instance = IdentificationtasksAnnotationsCreateTagsINDEXErrorComponent.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))

        if match > 1:
            # more than 1 match
            raise ValueError("Multiple matches found when deserializing the JSON string into IdentificationtasksAnnotationsCreateError with oneOf schemas: IdentificationtasksAnnotationsCreateBestPhotoUuidErrorComponent, IdentificationtasksAnnotationsCreateCharacteristicsIsBloodFedErrorComponent, IdentificationtasksAnnotationsCreateCharacteristicsIsGravidErrorComponent, IdentificationtasksAnnotationsCreateCharacteristicsNonFieldErrorsErrorComponent, IdentificationtasksAnnotationsCreateCharacteristicsSexErrorComponent, IdentificationtasksAnnotationsCreateClassificationConfidenceLabelErrorComponent, IdentificationtasksAnnotationsCreateClassificationNonFieldErrorsErrorComponent, IdentificationtasksAnnotationsCreateClassificationTaxonIdErrorComponent, IdentificationtasksAnnotationsCreateFeedbackInternalNoteErrorComponent, IdentificationtasksAnnotationsCreateFeedbackNonFieldErrorsErrorComponent, IdentificationtasksAnnotationsCreateFeedbackPublicNoteErrorComponent, IdentificationtasksAnnotationsCreateFeedbackUserNoteErrorComponent, IdentificationtasksAnnotationsCreateIsDecisiveErrorComponent, IdentificationtasksAnnotationsCreateIsFlaggedErrorComponent, IdentificationtasksAnnotationsCreateNonFieldErrorsErrorComponent, IdentificationtasksAnnotationsCreateObservationFlagsIsFavouriteErrorComponent, IdentificationtasksAnnotationsCreateObservationFlagsIsVisibleErrorComponent, IdentificationtasksAnnotationsCreateObservationFlagsNonFieldErrorsErrorComponent, IdentificationtasksAnnotationsCreateTagsErrorComponent, IdentificationtasksAnnotationsCreateTagsINDEXErrorComponent. Details: " + ", ".join(error_messages))
        elif match == 0:
            # no match
            raise ValueError("No match found when deserializing the JSON string into IdentificationtasksAnnotationsCreateError with oneOf schemas: IdentificationtasksAnnotationsCreateBestPhotoUuidErrorComponent, IdentificationtasksAnnotationsCreateCharacteristicsIsBloodFedErrorComponent, IdentificationtasksAnnotationsCreateCharacteristicsIsGravidErrorComponent, IdentificationtasksAnnotationsCreateCharacteristicsNonFieldErrorsErrorComponent, IdentificationtasksAnnotationsCreateCharacteristicsSexErrorComponent, IdentificationtasksAnnotationsCreateClassificationConfidenceLabelErrorComponent, IdentificationtasksAnnotationsCreateClassificationNonFieldErrorsErrorComponent, IdentificationtasksAnnotationsCreateClassificationTaxonIdErrorComponent, IdentificationtasksAnnotationsCreateFeedbackInternalNoteErrorComponent, IdentificationtasksAnnotationsCreateFeedbackNonFieldErrorsErrorComponent, IdentificationtasksAnnotationsCreateFeedbackPublicNoteErrorComponent, IdentificationtasksAnnotationsCreateFeedbackUserNoteErrorComponent, IdentificationtasksAnnotationsCreateIsDecisiveErrorComponent, IdentificationtasksAnnotationsCreateIsFlaggedErrorComponent, IdentificationtasksAnnotationsCreateNonFieldErrorsErrorComponent, IdentificationtasksAnnotationsCreateObservationFlagsIsFavouriteErrorComponent, IdentificationtasksAnnotationsCreateObservationFlagsIsVisibleErrorComponent, IdentificationtasksAnnotationsCreateObservationFlagsNonFieldErrorsErrorComponent, IdentificationtasksAnnotationsCreateTagsErrorComponent, IdentificationtasksAnnotationsCreateTagsINDEXErrorComponent. Details: " + ", ".join(error_messages))
        else:
            return instance

    def to_json(self) -> str:
        """Returns the JSON representation of the actual instance"""
        if self.actual_instance is None:
            return "null"

        if hasattr(self.actual_instance, "to_json") and callable(self.actual_instance.to_json):
            return self.actual_instance.to_json()
        else:
            return json.dumps(self.actual_instance)

    def to_dict(self) -> Optional[Union[Dict[str, Any], IdentificationtasksAnnotationsCreateBestPhotoUuidErrorComponent, IdentificationtasksAnnotationsCreateCharacteristicsIsBloodFedErrorComponent, IdentificationtasksAnnotationsCreateCharacteristicsIsGravidErrorComponent, IdentificationtasksAnnotationsCreateCharacteristicsNonFieldErrorsErrorComponent, IdentificationtasksAnnotationsCreateCharacteristicsSexErrorComponent, IdentificationtasksAnnotationsCreateClassificationConfidenceLabelErrorComponent, IdentificationtasksAnnotationsCreateClassificationNonFieldErrorsErrorComponent, IdentificationtasksAnnotationsCreateClassificationTaxonIdErrorComponent, IdentificationtasksAnnotationsCreateFeedbackInternalNoteErrorComponent, IdentificationtasksAnnotationsCreateFeedbackNonFieldErrorsErrorComponent, IdentificationtasksAnnotationsCreateFeedbackPublicNoteErrorComponent, IdentificationtasksAnnotationsCreateFeedbackUserNoteErrorComponent, IdentificationtasksAnnotationsCreateIsDecisiveErrorComponent, IdentificationtasksAnnotationsCreateIsFlaggedErrorComponent, IdentificationtasksAnnotationsCreateNonFieldErrorsErrorComponent, IdentificationtasksAnnotationsCreateObservationFlagsIsFavouriteErrorComponent, IdentificationtasksAnnotationsCreateObservationFlagsIsVisibleErrorComponent, IdentificationtasksAnnotationsCreateObservationFlagsNonFieldErrorsErrorComponent, IdentificationtasksAnnotationsCreateTagsErrorComponent, IdentificationtasksAnnotationsCreateTagsINDEXErrorComponent]]:
        """Returns the dict representation of the actual instance"""
        if self.actual_instance is None:
            return None

        if hasattr(self.actual_instance, "to_dict") and callable(self.actual_instance.to_dict):
            return self.actual_instance.to_dict()
        else:
            # primitive type
            return self.actual_instance

    def to_str(self) -> str:
        """Returns the string representation of the actual instance"""
        return pprint.pformat(self.model_dump())


